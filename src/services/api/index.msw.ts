/**
 * Generated by orval v7.2.0 🍺
 * Do not edit manually.
 * Book API
 * OpenAPI spec version: v1
 */
import { Appointment, Department, Diagnosis, Invoice, Patient, WeatherForecast, Doctor, DoctorSchedule, EmergencyContact } from '@/types';
import { faker } from '@faker-js/faker/locale/vi';
import { HttpResponse, delay, http } from 'msw';

export const getGetApiAppointmentsResponseMock = (): Appointment[] =>
    Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
        appointmentDate: faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, undefined]),
        appointmentId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
        appointmentTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
        createdAt: faker.helpers.arrayElement([
            faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
            undefined,
        ]),
        diagnoses: faker.helpers.arrayElement([
            Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                appointmentId: faker.helpers.arrayElement([
                    faker.number.int({ min: undefined, max: undefined }),
                    undefined,
                ]),
                description: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
                diagnosisDate: faker.helpers.arrayElement([
                    `${faker.date.past().toISOString().split('.')[0]}Z`,
                    undefined,
                ]),
                diagnosisId: faker.helpers.arrayElement([
                    faker.number.int({ min: undefined, max: undefined }),
                    undefined,
                ]),
                notes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
            })),
            undefined,
        ]),
        doctor: faker.helpers.arrayElement([
            {
                appointments: faker.helpers.arrayElement([[], undefined]),
                department: faker.helpers.arrayElement([
                    {
                        departmentId: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        departmentName: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        description: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        doctors: faker.helpers.arrayElement([[], undefined]),
                    },
                    undefined,
                ]),
                departmentId: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), null]),
                    undefined,
                ]),
                doctorId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
                doctorSchedules: faker.helpers.arrayElement([
                    Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                        dayOfWeek: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        doctorId: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        endTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                        scheduleId: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        startTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                    })),
                    undefined,
                ]),
                email: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
                name: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
                phoneNumber: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
                specialization: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
                user: faker.helpers.arrayElement([
                    {
                        accessFailedCount: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        concurrencyStamp: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        email: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                        id: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                        lockoutEnd: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                            undefined,
                        ]),
                        normalizedEmail: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        normalizedUserName: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        passwordHash: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        phoneNumber: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                        securityStamp: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                        userName: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                    },
                    undefined,
                ]),
                userId: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
            },
            undefined,
        ]),
        doctorId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
        patient: faker.helpers.arrayElement([
            {
                appointments: faker.helpers.arrayElement([[], undefined]),
                dateOfBirth: faker.helpers.arrayElement([faker.date.past().toISOString().split('T')[0], undefined]),
                email: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
                emergencyContacts: faker.helpers.arrayElement([
                    Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                        contactId: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        email: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        name: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        patientId: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        phoneNumber: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        relationship: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                    })),
                    undefined,
                ]),
                gender: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
                healthInsurance: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
                invoices: faker.helpers.arrayElement([
                    Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                        appointmentId: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), null]),
                            undefined,
                        ]),
                        invoiceDate: faker.helpers.arrayElement([
                            `${faker.date.past().toISOString().split('.')[0]}Z`,
                            undefined,
                        ]),
                        invoiceId: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        patientId: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        status: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        totalAmount: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                    })),
                    undefined,
                ]),
                name: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
                patientId: faker.helpers.arrayElement([
                    faker.number.int({ min: undefined, max: undefined }),
                    undefined,
                ]),
                phoneNumber: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
                user: faker.helpers.arrayElement([
                    {
                        accessFailedCount: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        concurrencyStamp: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        email: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                        id: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                        lockoutEnd: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                            undefined,
                        ]),
                        normalizedEmail: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        normalizedUserName: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        passwordHash: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        phoneNumber: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                        securityStamp: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                        userName: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                    },
                    undefined,
                ]),
                userId: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
            },
            undefined,
        ]),
        patientId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
        status: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    }));

export const getPostApiAppointmentsResponseMock = (overrideResponse: Partial<Appointment> = {}): Appointment => ({
    appointmentDate: faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, undefined]),
    appointmentId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
    appointmentTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
    createdAt: faker.helpers.arrayElement([
        faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
        undefined,
    ]),
    diagnoses: faker.helpers.arrayElement([
        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
            appointment: faker.helpers.arrayElement([
                {
                    appointmentDate: faker.helpers.arrayElement([
                        `${faker.date.past().toISOString().split('.')[0]}Z`,
                        undefined,
                    ]),
                    appointmentId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    appointmentTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                    createdAt: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                        undefined,
                    ]),
                    diagnoses: faker.helpers.arrayElement([[], undefined]),
                    doctor: faker.helpers.arrayElement([
                        {
                            appointments: faker.helpers.arrayElement([[], undefined]),
                            department: faker.helpers.arrayElement([
                                {
                                    departmentId: faker.helpers.arrayElement([
                                        faker.number.int({ min: undefined, max: undefined }),
                                        undefined,
                                    ]),
                                    departmentName: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    description: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    doctors: faker.helpers.arrayElement([[], undefined]),
                                },
                                undefined,
                            ]),
                            departmentId: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    null,
                                ]),
                                undefined,
                            ]),
                            doctorId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            doctorSchedules: faker.helpers.arrayElement([
                                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(
                                    () => ({
                                        dayOfWeek: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        doctorId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        endTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                                        scheduleId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        startTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                                    })
                                ),
                                undefined,
                            ]),
                            email: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            name: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumber: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            specialization: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            user: faker.helpers.arrayElement([
                                {
                                    accessFailedCount: faker.helpers.arrayElement([
                                        faker.number.int({ min: undefined, max: undefined }),
                                        undefined,
                                    ]),
                                    concurrencyStamp: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    email: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    id: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    lockoutEnd: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([
                                            `${faker.date.past().toISOString().split('.')[0]}Z`,
                                            null,
                                        ]),
                                        undefined,
                                    ]),
                                    normalizedEmail: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    normalizedUserName: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    passwordHash: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    phoneNumber: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    phoneNumberConfirmed: faker.helpers.arrayElement([
                                        faker.datatype.boolean(),
                                        undefined,
                                    ]),
                                    securityStamp: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    userName: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                },
                                undefined,
                            ]),
                            userId: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        },
                        undefined,
                    ]),
                    doctorId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    patient: faker.helpers.arrayElement([
                        {
                            appointments: faker.helpers.arrayElement([[], undefined]),
                            dateOfBirth: faker.helpers.arrayElement([
                                faker.date.past().toISOString().split('T')[0],
                                undefined,
                            ]),
                            email: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            emergencyContacts: faker.helpers.arrayElement([
                                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(
                                    () => ({
                                        contactId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        email: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        name: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        patientId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        phoneNumber: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        relationship: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                    })
                                ),
                                undefined,
                            ]),
                            gender: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            healthInsurance: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            invoices: faker.helpers.arrayElement([
                                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(
                                    () => ({
                                        appointmentId: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                null,
                                            ]),
                                            undefined,
                                        ]),
                                        invoiceDate: faker.helpers.arrayElement([
                                            `${faker.date.past().toISOString().split('.')[0]}Z`,
                                            undefined,
                                        ]),
                                        invoiceId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        patientId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        status: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        totalAmount: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                    })
                                ),
                                undefined,
                            ]),
                            name: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            patientId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            phoneNumber: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            user: faker.helpers.arrayElement([
                                {
                                    accessFailedCount: faker.helpers.arrayElement([
                                        faker.number.int({ min: undefined, max: undefined }),
                                        undefined,
                                    ]),
                                    concurrencyStamp: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    email: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    id: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    lockoutEnd: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([
                                            `${faker.date.past().toISOString().split('.')[0]}Z`,
                                            null,
                                        ]),
                                        undefined,
                                    ]),
                                    normalizedEmail: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    normalizedUserName: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    passwordHash: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    phoneNumber: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    phoneNumberConfirmed: faker.helpers.arrayElement([
                                        faker.datatype.boolean(),
                                        undefined,
                                    ]),
                                    securityStamp: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    userName: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                },
                                undefined,
                            ]),
                            userId: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        },
                        undefined,
                    ]),
                    patientId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    status: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                },
                undefined,
            ]),
            appointmentId: faker.helpers.arrayElement([
                faker.number.int({ min: undefined, max: undefined }),
                undefined,
            ]),
            description: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            diagnosisDate: faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, undefined]),
            diagnosisId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
            notes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
        })),
        undefined,
    ]),
    doctor: faker.helpers.arrayElement([
        {
            appointments: faker.helpers.arrayElement([
                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                    appointmentDate: faker.helpers.arrayElement([
                        `${faker.date.past().toISOString().split('.')[0]}Z`,
                        undefined,
                    ]),
                    appointmentId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    appointmentTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                    createdAt: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                        undefined,
                    ]),
                    diagnoses: faker.helpers.arrayElement([
                        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                            appointmentId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            description: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            diagnosisDate: faker.helpers.arrayElement([
                                `${faker.date.past().toISOString().split('.')[0]}Z`,
                                undefined,
                            ]),
                            diagnosisId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            notes: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        })),
                        undefined,
                    ]),
                    doctorId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    patient: faker.helpers.arrayElement([
                        {
                            appointments: faker.helpers.arrayElement([[], undefined]),
                            dateOfBirth: faker.helpers.arrayElement([
                                faker.date.past().toISOString().split('T')[0],
                                undefined,
                            ]),
                            email: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            emergencyContacts: faker.helpers.arrayElement([
                                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(
                                    () => ({
                                        contactId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        email: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        name: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        patientId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        phoneNumber: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        relationship: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                    })
                                ),
                                undefined,
                            ]),
                            gender: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            healthInsurance: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            invoices: faker.helpers.arrayElement([
                                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(
                                    () => ({
                                        appointmentId: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                null,
                                            ]),
                                            undefined,
                                        ]),
                                        invoiceDate: faker.helpers.arrayElement([
                                            `${faker.date.past().toISOString().split('.')[0]}Z`,
                                            undefined,
                                        ]),
                                        invoiceId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        patientId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        status: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        totalAmount: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                    })
                                ),
                                undefined,
                            ]),
                            name: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            patientId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            phoneNumber: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            user: faker.helpers.arrayElement([
                                {
                                    accessFailedCount: faker.helpers.arrayElement([
                                        faker.number.int({ min: undefined, max: undefined }),
                                        undefined,
                                    ]),
                                    concurrencyStamp: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    email: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    id: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    lockoutEnd: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([
                                            `${faker.date.past().toISOString().split('.')[0]}Z`,
                                            null,
                                        ]),
                                        undefined,
                                    ]),
                                    normalizedEmail: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    normalizedUserName: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    passwordHash: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    phoneNumber: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    phoneNumberConfirmed: faker.helpers.arrayElement([
                                        faker.datatype.boolean(),
                                        undefined,
                                    ]),
                                    securityStamp: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    userName: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                },
                                undefined,
                            ]),
                            userId: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        },
                        undefined,
                    ]),
                    patientId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    status: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                })),
                undefined,
            ]),
            department: faker.helpers.arrayElement([
                {
                    departmentId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    departmentName: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    description: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    doctors: faker.helpers.arrayElement([[], undefined]),
                },
                undefined,
            ]),
            departmentId: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), null]),
                undefined,
            ]),
            doctorId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
            doctorSchedules: faker.helpers.arrayElement([
                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                    dayOfWeek: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    doctorId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    endTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                    scheduleId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    startTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                })),
                undefined,
            ]),
            email: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
            name: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
            phoneNumber: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            specialization: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            user: faker.helpers.arrayElement([
                {
                    accessFailedCount: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    concurrencyStamp: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    email: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    id: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    lockoutEnd: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                        undefined,
                    ]),
                    normalizedEmail: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    normalizedUserName: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    passwordHash: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    phoneNumber: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    securityStamp: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    userName: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                },
                undefined,
            ]),
            userId: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
        },
        undefined,
    ]),
    doctorId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
    patient: faker.helpers.arrayElement([
        {
            appointments: faker.helpers.arrayElement([
                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                    appointmentDate: faker.helpers.arrayElement([
                        `${faker.date.past().toISOString().split('.')[0]}Z`,
                        undefined,
                    ]),
                    appointmentId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    appointmentTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                    createdAt: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                        undefined,
                    ]),
                    diagnoses: faker.helpers.arrayElement([
                        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                            appointmentId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            description: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            diagnosisDate: faker.helpers.arrayElement([
                                `${faker.date.past().toISOString().split('.')[0]}Z`,
                                undefined,
                            ]),
                            diagnosisId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            notes: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        })),
                        undefined,
                    ]),
                    doctor: faker.helpers.arrayElement([
                        {
                            appointments: faker.helpers.arrayElement([[], undefined]),
                            department: faker.helpers.arrayElement([
                                {
                                    departmentId: faker.helpers.arrayElement([
                                        faker.number.int({ min: undefined, max: undefined }),
                                        undefined,
                                    ]),
                                    departmentName: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    description: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    doctors: faker.helpers.arrayElement([[], undefined]),
                                },
                                undefined,
                            ]),
                            departmentId: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    null,
                                ]),
                                undefined,
                            ]),
                            doctorId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            doctorSchedules: faker.helpers.arrayElement([
                                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(
                                    () => ({
                                        dayOfWeek: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        doctorId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        endTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                                        scheduleId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        startTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                                    })
                                ),
                                undefined,
                            ]),
                            email: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            name: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumber: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            specialization: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            user: faker.helpers.arrayElement([
                                {
                                    accessFailedCount: faker.helpers.arrayElement([
                                        faker.number.int({ min: undefined, max: undefined }),
                                        undefined,
                                    ]),
                                    concurrencyStamp: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    email: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    id: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    lockoutEnd: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([
                                            `${faker.date.past().toISOString().split('.')[0]}Z`,
                                            null,
                                        ]),
                                        undefined,
                                    ]),
                                    normalizedEmail: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    normalizedUserName: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    passwordHash: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    phoneNumber: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    phoneNumberConfirmed: faker.helpers.arrayElement([
                                        faker.datatype.boolean(),
                                        undefined,
                                    ]),
                                    securityStamp: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    userName: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                },
                                undefined,
                            ]),
                            userId: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        },
                        undefined,
                    ]),
                    doctorId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    patientId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    status: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                })),
                undefined,
            ]),
            dateOfBirth: faker.helpers.arrayElement([faker.date.past().toISOString().split('T')[0], undefined]),
            email: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
            emergencyContacts: faker.helpers.arrayElement([
                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                    contactId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    email: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    name: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    patientId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    phoneNumber: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    relationship: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                })),
                undefined,
            ]),
            gender: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
            healthInsurance: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            invoices: faker.helpers.arrayElement([
                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                    appointmentId: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), null]),
                        undefined,
                    ]),
                    invoiceDate: faker.helpers.arrayElement([
                        `${faker.date.past().toISOString().split('.')[0]}Z`,
                        undefined,
                    ]),
                    invoiceId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    patientId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    status: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    totalAmount: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                })),
                undefined,
            ]),
            name: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
            patientId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
            phoneNumber: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            user: faker.helpers.arrayElement([
                {
                    accessFailedCount: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    concurrencyStamp: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    email: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    id: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    lockoutEnd: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                        undefined,
                    ]),
                    normalizedEmail: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    normalizedUserName: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    passwordHash: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    phoneNumber: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    securityStamp: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    userName: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                },
                undefined,
            ]),
            userId: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
        },
        undefined,
    ]),
    patientId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
    status: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    ...overrideResponse,
});

export const getGetApiAppointmentsIdResponseMock = (overrideResponse: Partial<Appointment> = {}): Appointment => ({
    appointmentDate: faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, undefined]),
    appointmentId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
    appointmentTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
    createdAt: faker.helpers.arrayElement([
        faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
        undefined,
    ]),
    diagnoses: faker.helpers.arrayElement([
        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
            appointment: faker.helpers.arrayElement([
                {
                    appointmentDate: faker.helpers.arrayElement([
                        `${faker.date.past().toISOString().split('.')[0]}Z`,
                        undefined,
                    ]),
                    appointmentId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    appointmentTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                    createdAt: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                        undefined,
                    ]),
                    diagnoses: faker.helpers.arrayElement([[], undefined]),
                    doctor: faker.helpers.arrayElement([
                        {
                            appointments: faker.helpers.arrayElement([[], undefined]),
                            department: faker.helpers.arrayElement([
                                {
                                    departmentId: faker.helpers.arrayElement([
                                        faker.number.int({ min: undefined, max: undefined }),
                                        undefined,
                                    ]),
                                    departmentName: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    description: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    doctors: faker.helpers.arrayElement([[], undefined]),
                                },
                                undefined,
                            ]),
                            departmentId: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    null,
                                ]),
                                undefined,
                            ]),
                            doctorId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            doctorSchedules: faker.helpers.arrayElement([
                                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(
                                    () => ({
                                        dayOfWeek: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        doctorId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        endTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                                        scheduleId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        startTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                                    })
                                ),
                                undefined,
                            ]),
                            email: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            name: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumber: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            specialization: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            user: faker.helpers.arrayElement([
                                {
                                    accessFailedCount: faker.helpers.arrayElement([
                                        faker.number.int({ min: undefined, max: undefined }),
                                        undefined,
                                    ]),
                                    concurrencyStamp: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    email: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    id: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    lockoutEnd: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([
                                            `${faker.date.past().toISOString().split('.')[0]}Z`,
                                            null,
                                        ]),
                                        undefined,
                                    ]),
                                    normalizedEmail: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    normalizedUserName: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    passwordHash: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    phoneNumber: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    phoneNumberConfirmed: faker.helpers.arrayElement([
                                        faker.datatype.boolean(),
                                        undefined,
                                    ]),
                                    securityStamp: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    userName: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                },
                                undefined,
                            ]),
                            userId: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        },
                        undefined,
                    ]),
                    doctorId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    patient: faker.helpers.arrayElement([
                        {
                            appointments: faker.helpers.arrayElement([[], undefined]),
                            dateOfBirth: faker.helpers.arrayElement([
                                faker.date.past().toISOString().split('T')[0],
                                undefined,
                            ]),
                            email: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            emergencyContacts: faker.helpers.arrayElement([
                                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(
                                    () => ({
                                        contactId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        email: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        name: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        patientId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        phoneNumber: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        relationship: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                    })
                                ),
                                undefined,
                            ]),
                            gender: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            healthInsurance: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            invoices: faker.helpers.arrayElement([
                                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(
                                    () => ({
                                        appointmentId: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                null,
                                            ]),
                                            undefined,
                                        ]),
                                        invoiceDate: faker.helpers.arrayElement([
                                            `${faker.date.past().toISOString().split('.')[0]}Z`,
                                            undefined,
                                        ]),
                                        invoiceId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        patientId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        status: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        totalAmount: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                    })
                                ),
                                undefined,
                            ]),
                            name: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            patientId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            phoneNumber: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            user: faker.helpers.arrayElement([
                                {
                                    accessFailedCount: faker.helpers.arrayElement([
                                        faker.number.int({ min: undefined, max: undefined }),
                                        undefined,
                                    ]),
                                    concurrencyStamp: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    email: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    id: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    lockoutEnd: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([
                                            `${faker.date.past().toISOString().split('.')[0]}Z`,
                                            null,
                                        ]),
                                        undefined,
                                    ]),
                                    normalizedEmail: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    normalizedUserName: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    passwordHash: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    phoneNumber: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    phoneNumberConfirmed: faker.helpers.arrayElement([
                                        faker.datatype.boolean(),
                                        undefined,
                                    ]),
                                    securityStamp: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    userName: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                },
                                undefined,
                            ]),
                            userId: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        },
                        undefined,
                    ]),
                    patientId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    status: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                },
                undefined,
            ]),
            appointmentId: faker.helpers.arrayElement([
                faker.number.int({ min: undefined, max: undefined }),
                undefined,
            ]),
            description: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            diagnosisDate: faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, undefined]),
            diagnosisId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
            notes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
        })),
        undefined,
    ]),
    doctor: faker.helpers.arrayElement([
        {
            appointments: faker.helpers.arrayElement([
                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                    appointmentDate: faker.helpers.arrayElement([
                        `${faker.date.past().toISOString().split('.')[0]}Z`,
                        undefined,
                    ]),
                    appointmentId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    appointmentTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                    createdAt: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                        undefined,
                    ]),
                    diagnoses: faker.helpers.arrayElement([
                        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                            appointmentId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            description: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            diagnosisDate: faker.helpers.arrayElement([
                                `${faker.date.past().toISOString().split('.')[0]}Z`,
                                undefined,
                            ]),
                            diagnosisId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            notes: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        })),
                        undefined,
                    ]),
                    doctorId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    patient: faker.helpers.arrayElement([
                        {
                            appointments: faker.helpers.arrayElement([[], undefined]),
                            dateOfBirth: faker.helpers.arrayElement([
                                faker.date.past().toISOString().split('T')[0],
                                undefined,
                            ]),
                            email: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            emergencyContacts: faker.helpers.arrayElement([
                                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(
                                    () => ({
                                        contactId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        email: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        name: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        patientId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        phoneNumber: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        relationship: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                    })
                                ),
                                undefined,
                            ]),
                            gender: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            healthInsurance: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            invoices: faker.helpers.arrayElement([
                                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(
                                    () => ({
                                        appointmentId: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                null,
                                            ]),
                                            undefined,
                                        ]),
                                        invoiceDate: faker.helpers.arrayElement([
                                            `${faker.date.past().toISOString().split('.')[0]}Z`,
                                            undefined,
                                        ]),
                                        invoiceId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        patientId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        status: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        totalAmount: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                    })
                                ),
                                undefined,
                            ]),
                            name: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            patientId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            phoneNumber: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            user: faker.helpers.arrayElement([
                                {
                                    accessFailedCount: faker.helpers.arrayElement([
                                        faker.number.int({ min: undefined, max: undefined }),
                                        undefined,
                                    ]),
                                    concurrencyStamp: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    email: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    id: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    lockoutEnd: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([
                                            `${faker.date.past().toISOString().split('.')[0]}Z`,
                                            null,
                                        ]),
                                        undefined,
                                    ]),
                                    normalizedEmail: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    normalizedUserName: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    passwordHash: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    phoneNumber: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    phoneNumberConfirmed: faker.helpers.arrayElement([
                                        faker.datatype.boolean(),
                                        undefined,
                                    ]),
                                    securityStamp: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    userName: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                },
                                undefined,
                            ]),
                            userId: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        },
                        undefined,
                    ]),
                    patientId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    status: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                })),
                undefined,
            ]),
            department: faker.helpers.arrayElement([
                {
                    departmentId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    departmentName: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    description: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    doctors: faker.helpers.arrayElement([[], undefined]),
                },
                undefined,
            ]),
            departmentId: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), null]),
                undefined,
            ]),
            doctorId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
            doctorSchedules: faker.helpers.arrayElement([
                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                    dayOfWeek: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    doctorId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    endTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                    scheduleId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    startTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                })),
                undefined,
            ]),
            email: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
            name: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
            phoneNumber: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            specialization: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            user: faker.helpers.arrayElement([
                {
                    accessFailedCount: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    concurrencyStamp: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    email: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    id: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    lockoutEnd: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                        undefined,
                    ]),
                    normalizedEmail: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    normalizedUserName: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    passwordHash: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    phoneNumber: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    securityStamp: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    userName: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                },
                undefined,
            ]),
            userId: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
        },
        undefined,
    ]),
    doctorId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
    patient: faker.helpers.arrayElement([
        {
            appointments: faker.helpers.arrayElement([
                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                    appointmentDate: faker.helpers.arrayElement([
                        `${faker.date.past().toISOString().split('.')[0]}Z`,
                        undefined,
                    ]),
                    appointmentId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    appointmentTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                    createdAt: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                        undefined,
                    ]),
                    diagnoses: faker.helpers.arrayElement([
                        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                            appointmentId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            description: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            diagnosisDate: faker.helpers.arrayElement([
                                `${faker.date.past().toISOString().split('.')[0]}Z`,
                                undefined,
                            ]),
                            diagnosisId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            notes: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        })),
                        undefined,
                    ]),
                    doctor: faker.helpers.arrayElement([
                        {
                            appointments: faker.helpers.arrayElement([[], undefined]),
                            department: faker.helpers.arrayElement([
                                {
                                    departmentId: faker.helpers.arrayElement([
                                        faker.number.int({ min: undefined, max: undefined }),
                                        undefined,
                                    ]),
                                    departmentName: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    description: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    doctors: faker.helpers.arrayElement([[], undefined]),
                                },
                                undefined,
                            ]),
                            departmentId: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    null,
                                ]),
                                undefined,
                            ]),
                            doctorId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            doctorSchedules: faker.helpers.arrayElement([
                                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(
                                    () => ({
                                        dayOfWeek: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        doctorId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        endTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                                        scheduleId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        startTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                                    })
                                ),
                                undefined,
                            ]),
                            email: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            name: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumber: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            specialization: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            user: faker.helpers.arrayElement([
                                {
                                    accessFailedCount: faker.helpers.arrayElement([
                                        faker.number.int({ min: undefined, max: undefined }),
                                        undefined,
                                    ]),
                                    concurrencyStamp: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    email: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    id: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    lockoutEnd: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([
                                            `${faker.date.past().toISOString().split('.')[0]}Z`,
                                            null,
                                        ]),
                                        undefined,
                                    ]),
                                    normalizedEmail: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    normalizedUserName: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    passwordHash: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    phoneNumber: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    phoneNumberConfirmed: faker.helpers.arrayElement([
                                        faker.datatype.boolean(),
                                        undefined,
                                    ]),
                                    securityStamp: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    userName: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                },
                                undefined,
                            ]),
                            userId: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        },
                        undefined,
                    ]),
                    doctorId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    patientId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    status: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                })),
                undefined,
            ]),
            dateOfBirth: faker.helpers.arrayElement([faker.date.past().toISOString().split('T')[0], undefined]),
            email: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
            emergencyContacts: faker.helpers.arrayElement([
                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                    contactId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    email: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    name: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    patientId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    phoneNumber: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    relationship: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                })),
                undefined,
            ]),
            gender: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
            healthInsurance: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            invoices: faker.helpers.arrayElement([
                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                    appointmentId: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), null]),
                        undefined,
                    ]),
                    invoiceDate: faker.helpers.arrayElement([
                        `${faker.date.past().toISOString().split('.')[0]}Z`,
                        undefined,
                    ]),
                    invoiceId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    patientId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    status: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    totalAmount: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                })),
                undefined,
            ]),
            name: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
            patientId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
            phoneNumber: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            user: faker.helpers.arrayElement([
                {
                    accessFailedCount: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    concurrencyStamp: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    email: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    id: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    lockoutEnd: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                        undefined,
                    ]),
                    normalizedEmail: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    normalizedUserName: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    passwordHash: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    phoneNumber: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    securityStamp: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    userName: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                },
                undefined,
            ]),
            userId: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
        },
        undefined,
    ]),
    patientId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
    status: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    ...overrideResponse,
});

export const getGetApiAppointmentsDoctorDoctorIdDateAppointmentDateResponseMock = (): Appointment[] =>
    Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
        appointmentDate: faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, undefined]),
        appointmentId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
        appointmentTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
        createdAt: faker.helpers.arrayElement([
            faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
            undefined,
        ]),
        diagnoses: faker.helpers.arrayElement([
            Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                appointmentId: faker.helpers.arrayElement([
                    faker.number.int({ min: undefined, max: undefined }),
                    undefined,
                ]),
                description: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
                diagnosisDate: faker.helpers.arrayElement([
                    `${faker.date.past().toISOString().split('.')[0]}Z`,
                    undefined,
                ]),
                diagnosisId: faker.helpers.arrayElement([
                    faker.number.int({ min: undefined, max: undefined }),
                    undefined,
                ]),
                notes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
            })),
            undefined,
        ]),
        doctor: faker.helpers.arrayElement([
            {
                appointments: faker.helpers.arrayElement([[], undefined]),
                department: faker.helpers.arrayElement([
                    {
                        departmentId: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        departmentName: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        description: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        doctors: faker.helpers.arrayElement([[], undefined]),
                    },
                    undefined,
                ]),
                departmentId: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), null]),
                    undefined,
                ]),
                doctorId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
                doctorSchedules: faker.helpers.arrayElement([
                    Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                        dayOfWeek: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        doctorId: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        endTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                        scheduleId: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        startTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                    })),
                    undefined,
                ]),
                email: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
                name: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
                phoneNumber: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
                specialization: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
                user: faker.helpers.arrayElement([
                    {
                        accessFailedCount: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        concurrencyStamp: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        email: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                        id: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                        lockoutEnd: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                            undefined,
                        ]),
                        normalizedEmail: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        normalizedUserName: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        passwordHash: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        phoneNumber: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                        securityStamp: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                        userName: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                    },
                    undefined,
                ]),
                userId: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
            },
            undefined,
        ]),
        doctorId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
        patient: faker.helpers.arrayElement([
            {
                appointments: faker.helpers.arrayElement([[], undefined]),
                dateOfBirth: faker.helpers.arrayElement([faker.date.past().toISOString().split('T')[0], undefined]),
                email: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
                emergencyContacts: faker.helpers.arrayElement([
                    Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                        contactId: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        email: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        name: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        patientId: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        phoneNumber: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        relationship: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                    })),
                    undefined,
                ]),
                gender: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
                healthInsurance: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
                invoices: faker.helpers.arrayElement([
                    Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                        appointmentId: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), null]),
                            undefined,
                        ]),
                        invoiceDate: faker.helpers.arrayElement([
                            `${faker.date.past().toISOString().split('.')[0]}Z`,
                            undefined,
                        ]),
                        invoiceId: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        patientId: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        status: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        totalAmount: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                    })),
                    undefined,
                ]),
                name: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
                patientId: faker.helpers.arrayElement([
                    faker.number.int({ min: undefined, max: undefined }),
                    undefined,
                ]),
                phoneNumber: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
                user: faker.helpers.arrayElement([
                    {
                        accessFailedCount: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        concurrencyStamp: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        email: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                        id: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                        lockoutEnd: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                            undefined,
                        ]),
                        normalizedEmail: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        normalizedUserName: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        passwordHash: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        phoneNumber: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                        securityStamp: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                        userName: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                    },
                    undefined,
                ]),
                userId: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
            },
            undefined,
        ]),
        patientId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
        status: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    }));

export const getGetApiDepartmentsResponseMock = (): Department[] =>
    Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
        departmentId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
        departmentName: faker.helpers.arrayElement([
            faker.helpers.arrayElement([faker.word.sample(), null]),
            undefined,
        ]),
        description: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
        doctors: faker.helpers.arrayElement([
            Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                appointments: faker.helpers.arrayElement([
                    Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                        appointmentDate: faker.helpers.arrayElement([
                            `${faker.date.past().toISOString().split('.')[0]}Z`,
                            undefined,
                        ]),
                        appointmentId: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        appointmentTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                        createdAt: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                            undefined,
                        ]),
                        diagnoses: faker.helpers.arrayElement([
                            Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                                appointmentId: faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    undefined,
                                ]),
                                description: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                diagnosisDate: faker.helpers.arrayElement([
                                    `${faker.date.past().toISOString().split('.')[0]}Z`,
                                    undefined,
                                ]),
                                diagnosisId: faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    undefined,
                                ]),
                                notes: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                            })),
                            undefined,
                        ]),
                        doctorId: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        patient: faker.helpers.arrayElement([
                            {
                                appointments: faker.helpers.arrayElement([[], undefined]),
                                dateOfBirth: faker.helpers.arrayElement([
                                    faker.date.past().toISOString().split('T')[0],
                                    undefined,
                                ]),
                                email: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                emergencyContacts: faker.helpers.arrayElement([
                                    Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(
                                        () => ({
                                            contactId: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            email: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            name: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            patientId: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            phoneNumber: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            relationship: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                        })
                                    ),
                                    undefined,
                                ]),
                                gender: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                healthInsurance: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                invoices: faker.helpers.arrayElement([
                                    Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(
                                        () => ({
                                            appointmentId: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([
                                                    faker.number.int({ min: undefined, max: undefined }),
                                                    null,
                                                ]),
                                                undefined,
                                            ]),
                                            invoiceDate: faker.helpers.arrayElement([
                                                `${faker.date.past().toISOString().split('.')[0]}Z`,
                                                undefined,
                                            ]),
                                            invoiceId: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            patientId: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            status: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            totalAmount: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                        })
                                    ),
                                    undefined,
                                ]),
                                name: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                patientId: faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    undefined,
                                ]),
                                phoneNumber: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                user: faker.helpers.arrayElement([
                                    {
                                        accessFailedCount: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        concurrencyStamp: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        email: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        emailConfirmed: faker.helpers.arrayElement([
                                            faker.datatype.boolean(),
                                            undefined,
                                        ]),
                                        id: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        lockoutEnabled: faker.helpers.arrayElement([
                                            faker.datatype.boolean(),
                                            undefined,
                                        ]),
                                        lockoutEnd: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([
                                                `${faker.date.past().toISOString().split('.')[0]}Z`,
                                                null,
                                            ]),
                                            undefined,
                                        ]),
                                        normalizedEmail: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        normalizedUserName: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        passwordHash: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        phoneNumber: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        phoneNumberConfirmed: faker.helpers.arrayElement([
                                            faker.datatype.boolean(),
                                            undefined,
                                        ]),
                                        securityStamp: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        twoFactorEnabled: faker.helpers.arrayElement([
                                            faker.datatype.boolean(),
                                            undefined,
                                        ]),
                                        userName: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                    },
                                    undefined,
                                ]),
                                userId: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                            },
                            undefined,
                        ]),
                        patientId: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        status: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                    })),
                    undefined,
                ]),
                departmentId: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), null]),
                    undefined,
                ]),
                doctorId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
                doctorSchedules: faker.helpers.arrayElement([
                    Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                        dayOfWeek: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        doctorId: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        endTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                        scheduleId: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        startTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                    })),
                    undefined,
                ]),
                email: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
                name: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
                phoneNumber: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
                specialization: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
                user: faker.helpers.arrayElement([
                    {
                        accessFailedCount: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        concurrencyStamp: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        email: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                        id: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                        lockoutEnd: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                            undefined,
                        ]),
                        normalizedEmail: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        normalizedUserName: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        passwordHash: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        phoneNumber: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                        securityStamp: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                        userName: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                    },
                    undefined,
                ]),
                userId: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
            })),
            undefined,
        ]),
    }));

export const getPostApiDepartmentsResponseMock = (overrideResponse: Partial<Department> = {}): Department => ({
    departmentId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
    departmentName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    description: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    doctors: faker.helpers.arrayElement([
        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
            appointments: faker.helpers.arrayElement([
                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                    appointmentDate: faker.helpers.arrayElement([
                        `${faker.date.past().toISOString().split('.')[0]}Z`,
                        undefined,
                    ]),
                    appointmentId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    appointmentTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                    createdAt: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                        undefined,
                    ]),
                    diagnoses: faker.helpers.arrayElement([
                        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                            appointmentId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            description: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            diagnosisDate: faker.helpers.arrayElement([
                                `${faker.date.past().toISOString().split('.')[0]}Z`,
                                undefined,
                            ]),
                            diagnosisId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            notes: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        })),
                        undefined,
                    ]),
                    doctorId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    patient: faker.helpers.arrayElement([
                        {
                            appointments: faker.helpers.arrayElement([[], undefined]),
                            dateOfBirth: faker.helpers.arrayElement([
                                faker.date.past().toISOString().split('T')[0],
                                undefined,
                            ]),
                            email: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            emergencyContacts: faker.helpers.arrayElement([
                                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(
                                    () => ({
                                        contactId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        email: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        name: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        patientId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        phoneNumber: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        relationship: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                    })
                                ),
                                undefined,
                            ]),
                            gender: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            healthInsurance: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            invoices: faker.helpers.arrayElement([
                                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(
                                    () => ({
                                        appointmentId: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                null,
                                            ]),
                                            undefined,
                                        ]),
                                        invoiceDate: faker.helpers.arrayElement([
                                            `${faker.date.past().toISOString().split('.')[0]}Z`,
                                            undefined,
                                        ]),
                                        invoiceId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        patientId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        status: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        totalAmount: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                    })
                                ),
                                undefined,
                            ]),
                            name: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            patientId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            phoneNumber: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            user: faker.helpers.arrayElement([
                                {
                                    accessFailedCount: faker.helpers.arrayElement([
                                        faker.number.int({ min: undefined, max: undefined }),
                                        undefined,
                                    ]),
                                    concurrencyStamp: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    email: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    id: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    lockoutEnd: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([
                                            `${faker.date.past().toISOString().split('.')[0]}Z`,
                                            null,
                                        ]),
                                        undefined,
                                    ]),
                                    normalizedEmail: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    normalizedUserName: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    passwordHash: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    phoneNumber: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    phoneNumberConfirmed: faker.helpers.arrayElement([
                                        faker.datatype.boolean(),
                                        undefined,
                                    ]),
                                    securityStamp: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    userName: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                },
                                undefined,
                            ]),
                            userId: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        },
                        undefined,
                    ]),
                    patientId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    status: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                })),
                undefined,
            ]),
            department: faker.helpers.arrayElement([
                {
                    departmentId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    departmentName: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    description: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    doctors: faker.helpers.arrayElement([[], undefined]),
                },
                undefined,
            ]),
            departmentId: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), null]),
                undefined,
            ]),
            doctorId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
            doctorSchedules: faker.helpers.arrayElement([
                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                    dayOfWeek: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    doctorId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    endTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                    scheduleId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    startTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                })),
                undefined,
            ]),
            email: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
            name: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
            phoneNumber: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            specialization: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            user: faker.helpers.arrayElement([
                {
                    accessFailedCount: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    concurrencyStamp: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    email: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    id: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    lockoutEnd: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                        undefined,
                    ]),
                    normalizedEmail: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    normalizedUserName: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    passwordHash: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    phoneNumber: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    securityStamp: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    userName: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                },
                undefined,
            ]),
            userId: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
        })),
        undefined,
    ]),
    ...overrideResponse,
});

export const getGetApiDepartmentsIdResponseMock = (overrideResponse: Partial<Department> = {}): Department => ({
    departmentId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
    departmentName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    description: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    doctors: faker.helpers.arrayElement([
        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
            appointments: faker.helpers.arrayElement([
                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                    appointmentDate: faker.helpers.arrayElement([
                        `${faker.date.past().toISOString().split('.')[0]}Z`,
                        undefined,
                    ]),
                    appointmentId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    appointmentTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                    createdAt: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                        undefined,
                    ]),
                    diagnoses: faker.helpers.arrayElement([
                        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                            appointmentId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            description: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            diagnosisDate: faker.helpers.arrayElement([
                                `${faker.date.past().toISOString().split('.')[0]}Z`,
                                undefined,
                            ]),
                            diagnosisId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            notes: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        })),
                        undefined,
                    ]),
                    doctorId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    patient: faker.helpers.arrayElement([
                        {
                            appointments: faker.helpers.arrayElement([[], undefined]),
                            dateOfBirth: faker.helpers.arrayElement([
                                faker.date.past().toISOString().split('T')[0],
                                undefined,
                            ]),
                            email: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            emergencyContacts: faker.helpers.arrayElement([
                                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(
                                    () => ({
                                        contactId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        email: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        name: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        patientId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        phoneNumber: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        relationship: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                    })
                                ),
                                undefined,
                            ]),
                            gender: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            healthInsurance: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            invoices: faker.helpers.arrayElement([
                                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(
                                    () => ({
                                        appointmentId: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                null,
                                            ]),
                                            undefined,
                                        ]),
                                        invoiceDate: faker.helpers.arrayElement([
                                            `${faker.date.past().toISOString().split('.')[0]}Z`,
                                            undefined,
                                        ]),
                                        invoiceId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        patientId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        status: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        totalAmount: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                    })
                                ),
                                undefined,
                            ]),
                            name: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            patientId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            phoneNumber: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            user: faker.helpers.arrayElement([
                                {
                                    accessFailedCount: faker.helpers.arrayElement([
                                        faker.number.int({ min: undefined, max: undefined }),
                                        undefined,
                                    ]),
                                    concurrencyStamp: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    email: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    id: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    lockoutEnd: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([
                                            `${faker.date.past().toISOString().split('.')[0]}Z`,
                                            null,
                                        ]),
                                        undefined,
                                    ]),
                                    normalizedEmail: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    normalizedUserName: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    passwordHash: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    phoneNumber: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    phoneNumberConfirmed: faker.helpers.arrayElement([
                                        faker.datatype.boolean(),
                                        undefined,
                                    ]),
                                    securityStamp: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    userName: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                },
                                undefined,
                            ]),
                            userId: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        },
                        undefined,
                    ]),
                    patientId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    status: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                })),
                undefined,
            ]),
            department: faker.helpers.arrayElement([
                {
                    departmentId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    departmentName: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    description: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    doctors: faker.helpers.arrayElement([[], undefined]),
                },
                undefined,
            ]),
            departmentId: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), null]),
                undefined,
            ]),
            doctorId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
            doctorSchedules: faker.helpers.arrayElement([
                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                    dayOfWeek: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    doctorId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    endTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                    scheduleId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    startTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                })),
                undefined,
            ]),
            email: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
            name: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
            phoneNumber: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            specialization: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            user: faker.helpers.arrayElement([
                {
                    accessFailedCount: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    concurrencyStamp: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    email: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    id: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    lockoutEnd: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                        undefined,
                    ]),
                    normalizedEmail: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    normalizedUserName: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    passwordHash: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    phoneNumber: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    securityStamp: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    userName: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                },
                undefined,
            ]),
            userId: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
        })),
        undefined,
    ]),
    ...overrideResponse,
});

export const getGetApiDiagnosesResponseMock = (): Diagnosis[] =>
    Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
        appointment: faker.helpers.arrayElement([
            {
                appointmentDate: faker.helpers.arrayElement([
                    `${faker.date.past().toISOString().split('.')[0]}Z`,
                    undefined,
                ]),
                appointmentId: faker.helpers.arrayElement([
                    faker.number.int({ min: undefined, max: undefined }),
                    undefined,
                ]),
                appointmentTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                createdAt: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                    undefined,
                ]),
                diagnoses: faker.helpers.arrayElement([[], undefined]),
                doctor: faker.helpers.arrayElement([
                    {
                        appointments: faker.helpers.arrayElement([[], undefined]),
                        department: faker.helpers.arrayElement([
                            {
                                departmentId: faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    undefined,
                                ]),
                                departmentName: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                description: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                doctors: faker.helpers.arrayElement([[], undefined]),
                            },
                            undefined,
                        ]),
                        departmentId: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), null]),
                            undefined,
                        ]),
                        doctorId: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        doctorSchedules: faker.helpers.arrayElement([
                            Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                                dayOfWeek: faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    undefined,
                                ]),
                                doctorId: faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    undefined,
                                ]),
                                endTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                                scheduleId: faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    undefined,
                                ]),
                                startTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                            })),
                            undefined,
                        ]),
                        email: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        name: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        phoneNumber: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        specialization: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        user: faker.helpers.arrayElement([
                            {
                                accessFailedCount: faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    undefined,
                                ]),
                                concurrencyStamp: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                email: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                id: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                lockoutEnd: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([
                                        `${faker.date.past().toISOString().split('.')[0]}Z`,
                                        null,
                                    ]),
                                    undefined,
                                ]),
                                normalizedEmail: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                normalizedUserName: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                passwordHash: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                phoneNumber: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                securityStamp: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                userName: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                            },
                            undefined,
                        ]),
                        userId: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                    },
                    undefined,
                ]),
                doctorId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
                patient: faker.helpers.arrayElement([
                    {
                        appointments: faker.helpers.arrayElement([[], undefined]),
                        dateOfBirth: faker.helpers.arrayElement([
                            faker.date.past().toISOString().split('T')[0],
                            undefined,
                        ]),
                        email: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        emergencyContacts: faker.helpers.arrayElement([
                            Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                                contactId: faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    undefined,
                                ]),
                                email: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                name: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                patientId: faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    undefined,
                                ]),
                                phoneNumber: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                relationship: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                            })),
                            undefined,
                        ]),
                        gender: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        healthInsurance: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        invoices: faker.helpers.arrayElement([
                            Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                                appointmentId: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([
                                        faker.number.int({ min: undefined, max: undefined }),
                                        null,
                                    ]),
                                    undefined,
                                ]),
                                invoiceDate: faker.helpers.arrayElement([
                                    `${faker.date.past().toISOString().split('.')[0]}Z`,
                                    undefined,
                                ]),
                                invoiceId: faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    undefined,
                                ]),
                                patientId: faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    undefined,
                                ]),
                                status: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                totalAmount: faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    undefined,
                                ]),
                            })),
                            undefined,
                        ]),
                        name: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        patientId: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        phoneNumber: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        user: faker.helpers.arrayElement([
                            {
                                accessFailedCount: faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    undefined,
                                ]),
                                concurrencyStamp: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                email: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                id: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                lockoutEnd: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([
                                        `${faker.date.past().toISOString().split('.')[0]}Z`,
                                        null,
                                    ]),
                                    undefined,
                                ]),
                                normalizedEmail: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                normalizedUserName: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                passwordHash: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                phoneNumber: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                securityStamp: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                userName: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                            },
                            undefined,
                        ]),
                        userId: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                    },
                    undefined,
                ]),
                patientId: faker.helpers.arrayElement([
                    faker.number.int({ min: undefined, max: undefined }),
                    undefined,
                ]),
                status: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
            },
            undefined,
        ]),
        appointmentId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
        description: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
        diagnosisDate: faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, undefined]),
        diagnosisId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
        notes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    }));

export const getPostApiDiagnosesResponseMock = (overrideResponse: Partial<Diagnosis> = {}): Diagnosis => ({
    appointment: faker.helpers.arrayElement([
        {
            appointmentDate: faker.helpers.arrayElement([
                `${faker.date.past().toISOString().split('.')[0]}Z`,
                undefined,
            ]),
            appointmentId: faker.helpers.arrayElement([
                faker.number.int({ min: undefined, max: undefined }),
                undefined,
            ]),
            appointmentTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
            createdAt: faker.helpers.arrayElement([
                faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                undefined,
            ]),
            diagnoses: faker.helpers.arrayElement([
                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                    appointmentId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    description: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    diagnosisDate: faker.helpers.arrayElement([
                        `${faker.date.past().toISOString().split('.')[0]}Z`,
                        undefined,
                    ]),
                    diagnosisId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    notes: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                })),
                undefined,
            ]),
            doctor: faker.helpers.arrayElement([
                {
                    appointments: faker.helpers.arrayElement([[], undefined]),
                    department: faker.helpers.arrayElement([
                        {
                            departmentId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            departmentName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            description: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            doctors: faker.helpers.arrayElement([[], undefined]),
                        },
                        undefined,
                    ]),
                    departmentId: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), null]),
                        undefined,
                    ]),
                    doctorId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    doctorSchedules: faker.helpers.arrayElement([
                        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                            dayOfWeek: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            doctorId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            endTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                            scheduleId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            startTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                        })),
                        undefined,
                    ]),
                    email: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    name: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    phoneNumber: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    specialization: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    user: faker.helpers.arrayElement([
                        {
                            accessFailedCount: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            concurrencyStamp: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            email: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            id: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            lockoutEnd: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                                undefined,
                            ]),
                            normalizedEmail: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            normalizedUserName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            passwordHash: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumber: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            securityStamp: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            userName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        },
                        undefined,
                    ]),
                    userId: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                },
                undefined,
            ]),
            doctorId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
            patient: faker.helpers.arrayElement([
                {
                    appointments: faker.helpers.arrayElement([[], undefined]),
                    dateOfBirth: faker.helpers.arrayElement([faker.date.past().toISOString().split('T')[0], undefined]),
                    email: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    emergencyContacts: faker.helpers.arrayElement([
                        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                            contactId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            email: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            name: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            patientId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            phoneNumber: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            relationship: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        })),
                        undefined,
                    ]),
                    gender: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    healthInsurance: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    invoices: faker.helpers.arrayElement([
                        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                            appointmentId: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    null,
                                ]),
                                undefined,
                            ]),
                            invoiceDate: faker.helpers.arrayElement([
                                `${faker.date.past().toISOString().split('.')[0]}Z`,
                                undefined,
                            ]),
                            invoiceId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            patientId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            status: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            totalAmount: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                        })),
                        undefined,
                    ]),
                    name: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    patientId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    phoneNumber: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    user: faker.helpers.arrayElement([
                        {
                            accessFailedCount: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            concurrencyStamp: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            email: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            id: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            lockoutEnd: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                                undefined,
                            ]),
                            normalizedEmail: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            normalizedUserName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            passwordHash: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumber: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            securityStamp: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            userName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        },
                        undefined,
                    ]),
                    userId: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                },
                undefined,
            ]),
            patientId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
            status: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
        },
        undefined,
    ]),
    appointmentId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
    description: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    diagnosisDate: faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, undefined]),
    diagnosisId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
    notes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    ...overrideResponse,
});

export const getGetApiDiagnosesIdResponseMock = (overrideResponse: Partial<Diagnosis> = {}): Diagnosis => ({
    appointment: faker.helpers.arrayElement([
        {
            appointmentDate: faker.helpers.arrayElement([
                `${faker.date.past().toISOString().split('.')[0]}Z`,
                undefined,
            ]),
            appointmentId: faker.helpers.arrayElement([
                faker.number.int({ min: undefined, max: undefined }),
                undefined,
            ]),
            appointmentTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
            createdAt: faker.helpers.arrayElement([
                faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                undefined,
            ]),
            diagnoses: faker.helpers.arrayElement([
                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                    appointmentId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    description: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    diagnosisDate: faker.helpers.arrayElement([
                        `${faker.date.past().toISOString().split('.')[0]}Z`,
                        undefined,
                    ]),
                    diagnosisId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    notes: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                })),
                undefined,
            ]),
            doctor: faker.helpers.arrayElement([
                {
                    appointments: faker.helpers.arrayElement([[], undefined]),
                    department: faker.helpers.arrayElement([
                        {
                            departmentId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            departmentName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            description: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            doctors: faker.helpers.arrayElement([[], undefined]),
                        },
                        undefined,
                    ]),
                    departmentId: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), null]),
                        undefined,
                    ]),
                    doctorId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    doctorSchedules: faker.helpers.arrayElement([
                        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                            dayOfWeek: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            doctorId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            endTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                            scheduleId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            startTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                        })),
                        undefined,
                    ]),
                    email: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    name: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    phoneNumber: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    specialization: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    user: faker.helpers.arrayElement([
                        {
                            accessFailedCount: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            concurrencyStamp: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            email: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            id: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            lockoutEnd: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                                undefined,
                            ]),
                            normalizedEmail: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            normalizedUserName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            passwordHash: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumber: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            securityStamp: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            userName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        },
                        undefined,
                    ]),
                    userId: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                },
                undefined,
            ]),
            doctorId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
            patient: faker.helpers.arrayElement([
                {
                    appointments: faker.helpers.arrayElement([[], undefined]),
                    dateOfBirth: faker.helpers.arrayElement([faker.date.past().toISOString().split('T')[0], undefined]),
                    email: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    emergencyContacts: faker.helpers.arrayElement([
                        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                            contactId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            email: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            name: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            patientId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            phoneNumber: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            relationship: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        })),
                        undefined,
                    ]),
                    gender: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    healthInsurance: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    invoices: faker.helpers.arrayElement([
                        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                            appointmentId: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    null,
                                ]),
                                undefined,
                            ]),
                            invoiceDate: faker.helpers.arrayElement([
                                `${faker.date.past().toISOString().split('.')[0]}Z`,
                                undefined,
                            ]),
                            invoiceId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            patientId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            status: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            totalAmount: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                        })),
                        undefined,
                    ]),
                    name: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    patientId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    phoneNumber: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    user: faker.helpers.arrayElement([
                        {
                            accessFailedCount: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            concurrencyStamp: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            email: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            id: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            lockoutEnd: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                                undefined,
                            ]),
                            normalizedEmail: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            normalizedUserName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            passwordHash: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumber: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            securityStamp: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            userName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        },
                        undefined,
                    ]),
                    userId: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                },
                undefined,
            ]),
            patientId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
            status: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
        },
        undefined,
    ]),
    appointmentId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
    description: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    diagnosisDate: faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, undefined]),
    diagnosisId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
    notes: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    ...overrideResponse,
});

export const getGetApiDoctorsResponseMock = (): Doctor[] =>
    Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
        appointments: faker.helpers.arrayElement([
            Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                appointmentDate: faker.helpers.arrayElement([
                    `${faker.date.past().toISOString().split('.')[0]}Z`,
                    undefined,
                ]),
                appointmentId: faker.helpers.arrayElement([
                    faker.number.int({ min: undefined, max: undefined }),
                    undefined,
                ]),
                appointmentTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                createdAt: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                    undefined,
                ]),
                diagnoses: faker.helpers.arrayElement([
                    Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                        appointmentId: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        description: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        diagnosisDate: faker.helpers.arrayElement([
                            `${faker.date.past().toISOString().split('.')[0]}Z`,
                            undefined,
                        ]),
                        diagnosisId: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        notes: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                    })),
                    undefined,
                ]),
                doctorId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
                patient: faker.helpers.arrayElement([
                    {
                        appointments: faker.helpers.arrayElement([[], undefined]),
                        dateOfBirth: faker.helpers.arrayElement([
                            faker.date.past().toISOString().split('T')[0],
                            undefined,
                        ]),
                        email: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        emergencyContacts: faker.helpers.arrayElement([
                            Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                                contactId: faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    undefined,
                                ]),
                                email: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                name: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                patientId: faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    undefined,
                                ]),
                                phoneNumber: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                relationship: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                            })),
                            undefined,
                        ]),
                        gender: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        healthInsurance: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        invoices: faker.helpers.arrayElement([
                            Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                                appointmentId: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([
                                        faker.number.int({ min: undefined, max: undefined }),
                                        null,
                                    ]),
                                    undefined,
                                ]),
                                invoiceDate: faker.helpers.arrayElement([
                                    `${faker.date.past().toISOString().split('.')[0]}Z`,
                                    undefined,
                                ]),
                                invoiceId: faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    undefined,
                                ]),
                                patientId: faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    undefined,
                                ]),
                                status: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                totalAmount: faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    undefined,
                                ]),
                            })),
                            undefined,
                        ]),
                        name: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        patientId: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        phoneNumber: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        user: faker.helpers.arrayElement([
                            {
                                accessFailedCount: faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    undefined,
                                ]),
                                concurrencyStamp: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                email: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                id: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                lockoutEnd: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([
                                        `${faker.date.past().toISOString().split('.')[0]}Z`,
                                        null,
                                    ]),
                                    undefined,
                                ]),
                                normalizedEmail: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                normalizedUserName: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                passwordHash: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                phoneNumber: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                securityStamp: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                userName: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                            },
                            undefined,
                        ]),
                        userId: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                    },
                    undefined,
                ]),
                patientId: faker.helpers.arrayElement([
                    faker.number.int({ min: undefined, max: undefined }),
                    undefined,
                ]),
                status: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
            })),
            undefined,
        ]),
        department: faker.helpers.arrayElement([
            {
                departmentId: faker.helpers.arrayElement([
                    faker.number.int({ min: undefined, max: undefined }),
                    undefined,
                ]),
                departmentName: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
                description: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
                doctors: faker.helpers.arrayElement([[], undefined]),
            },
            undefined,
        ]),
        departmentId: faker.helpers.arrayElement([
            faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), null]),
            undefined,
        ]),
        doctorId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
        doctorSchedules: faker.helpers.arrayElement([
            Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                dayOfWeek: faker.helpers.arrayElement([
                    faker.number.int({ min: undefined, max: undefined }),
                    undefined,
                ]),
                doctorId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
                endTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                scheduleId: faker.helpers.arrayElement([
                    faker.number.int({ min: undefined, max: undefined }),
                    undefined,
                ]),
                startTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
            })),
            undefined,
        ]),
        email: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
        name: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
        phoneNumber: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
        specialization: faker.helpers.arrayElement([
            faker.helpers.arrayElement([faker.word.sample(), null]),
            undefined,
        ]),
        user: faker.helpers.arrayElement([
            {
                accessFailedCount: faker.helpers.arrayElement([
                    faker.number.int({ min: undefined, max: undefined }),
                    undefined,
                ]),
                concurrencyStamp: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
                email: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
                emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
                lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                lockoutEnd: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                    undefined,
                ]),
                normalizedEmail: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
                normalizedUserName: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
                passwordHash: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
                phoneNumber: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
                phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                securityStamp: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
                twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                userName: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
            },
            undefined,
        ]),
        userId: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    }));

export const getPostApiDoctorsResponseMock = (overrideResponse: Partial<Doctor> = {}): Doctor => ({
    appointments: faker.helpers.arrayElement([
        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
            appointmentDate: faker.helpers.arrayElement([
                `${faker.date.past().toISOString().split('.')[0]}Z`,
                undefined,
            ]),
            appointmentId: faker.helpers.arrayElement([
                faker.number.int({ min: undefined, max: undefined }),
                undefined,
            ]),
            appointmentTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
            createdAt: faker.helpers.arrayElement([
                faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                undefined,
            ]),
            diagnoses: faker.helpers.arrayElement([
                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                    appointmentId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    description: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    diagnosisDate: faker.helpers.arrayElement([
                        `${faker.date.past().toISOString().split('.')[0]}Z`,
                        undefined,
                    ]),
                    diagnosisId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    notes: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                })),
                undefined,
            ]),
            doctor: faker.helpers.arrayElement([
                {
                    appointments: faker.helpers.arrayElement([[], undefined]),
                    department: faker.helpers.arrayElement([
                        {
                            departmentId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            departmentName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            description: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            doctors: faker.helpers.arrayElement([[], undefined]),
                        },
                        undefined,
                    ]),
                    departmentId: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), null]),
                        undefined,
                    ]),
                    doctorId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    doctorSchedules: faker.helpers.arrayElement([
                        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                            dayOfWeek: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            doctorId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            endTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                            scheduleId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            startTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                        })),
                        undefined,
                    ]),
                    email: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    name: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    phoneNumber: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    specialization: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    user: faker.helpers.arrayElement([
                        {
                            accessFailedCount: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            concurrencyStamp: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            email: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            id: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            lockoutEnd: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                                undefined,
                            ]),
                            normalizedEmail: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            normalizedUserName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            passwordHash: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumber: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            securityStamp: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            userName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        },
                        undefined,
                    ]),
                    userId: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                },
                undefined,
            ]),
            doctorId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
            patient: faker.helpers.arrayElement([
                {
                    appointments: faker.helpers.arrayElement([[], undefined]),
                    dateOfBirth: faker.helpers.arrayElement([faker.date.past().toISOString().split('T')[0], undefined]),
                    email: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    emergencyContacts: faker.helpers.arrayElement([
                        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                            contactId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            email: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            name: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            patientId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            phoneNumber: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            relationship: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        })),
                        undefined,
                    ]),
                    gender: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    healthInsurance: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    invoices: faker.helpers.arrayElement([
                        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                            appointmentId: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    null,
                                ]),
                                undefined,
                            ]),
                            invoiceDate: faker.helpers.arrayElement([
                                `${faker.date.past().toISOString().split('.')[0]}Z`,
                                undefined,
                            ]),
                            invoiceId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            patientId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            status: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            totalAmount: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                        })),
                        undefined,
                    ]),
                    name: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    patientId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    phoneNumber: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    user: faker.helpers.arrayElement([
                        {
                            accessFailedCount: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            concurrencyStamp: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            email: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            id: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            lockoutEnd: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                                undefined,
                            ]),
                            normalizedEmail: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            normalizedUserName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            passwordHash: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumber: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            securityStamp: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            userName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        },
                        undefined,
                    ]),
                    userId: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                },
                undefined,
            ]),
            patientId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
            status: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
        })),
        undefined,
    ]),
    department: faker.helpers.arrayElement([
        {
            departmentId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
            departmentName: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            description: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            doctors: faker.helpers.arrayElement([
                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                    appointments: faker.helpers.arrayElement([
                        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                            appointmentDate: faker.helpers.arrayElement([
                                `${faker.date.past().toISOString().split('.')[0]}Z`,
                                undefined,
                            ]),
                            appointmentId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            appointmentTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                            createdAt: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                                undefined,
                            ]),
                            diagnoses: faker.helpers.arrayElement([
                                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(
                                    () => ({
                                        appointmentId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        description: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        diagnosisDate: faker.helpers.arrayElement([
                                            `${faker.date.past().toISOString().split('.')[0]}Z`,
                                            undefined,
                                        ]),
                                        diagnosisId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        notes: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                    })
                                ),
                                undefined,
                            ]),
                            doctorId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            patient: faker.helpers.arrayElement([
                                {
                                    appointments: faker.helpers.arrayElement([[], undefined]),
                                    dateOfBirth: faker.helpers.arrayElement([
                                        faker.date.past().toISOString().split('T')[0],
                                        undefined,
                                    ]),
                                    email: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    emergencyContacts: faker.helpers.arrayElement([
                                        Array.from(
                                            { length: faker.number.int({ min: 1, max: 10 }) },
                                            (_, i) => i + 1
                                        ).map(() => ({
                                            contactId: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            email: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            name: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            patientId: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            phoneNumber: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            relationship: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                        })),
                                        undefined,
                                    ]),
                                    gender: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    healthInsurance: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    invoices: faker.helpers.arrayElement([
                                        Array.from(
                                            { length: faker.number.int({ min: 1, max: 10 }) },
                                            (_, i) => i + 1
                                        ).map(() => ({
                                            appointmentId: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([
                                                    faker.number.int({ min: undefined, max: undefined }),
                                                    null,
                                                ]),
                                                undefined,
                                            ]),
                                            invoiceDate: faker.helpers.arrayElement([
                                                `${faker.date.past().toISOString().split('.')[0]}Z`,
                                                undefined,
                                            ]),
                                            invoiceId: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            patientId: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            status: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            totalAmount: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                        })),
                                        undefined,
                                    ]),
                                    name: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    patientId: faker.helpers.arrayElement([
                                        faker.number.int({ min: undefined, max: undefined }),
                                        undefined,
                                    ]),
                                    phoneNumber: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    user: faker.helpers.arrayElement([
                                        {
                                            accessFailedCount: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            concurrencyStamp: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            email: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            emailConfirmed: faker.helpers.arrayElement([
                                                faker.datatype.boolean(),
                                                undefined,
                                            ]),
                                            id: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            lockoutEnabled: faker.helpers.arrayElement([
                                                faker.datatype.boolean(),
                                                undefined,
                                            ]),
                                            lockoutEnd: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([
                                                    `${faker.date.past().toISOString().split('.')[0]}Z`,
                                                    null,
                                                ]),
                                                undefined,
                                            ]),
                                            normalizedEmail: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            normalizedUserName: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            passwordHash: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            phoneNumber: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            phoneNumberConfirmed: faker.helpers.arrayElement([
                                                faker.datatype.boolean(),
                                                undefined,
                                            ]),
                                            securityStamp: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            twoFactorEnabled: faker.helpers.arrayElement([
                                                faker.datatype.boolean(),
                                                undefined,
                                            ]),
                                            userName: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                        },
                                        undefined,
                                    ]),
                                    userId: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                },
                                undefined,
                            ]),
                            patientId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            status: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        })),
                        undefined,
                    ]),
                    departmentId: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), null]),
                        undefined,
                    ]),
                    doctorId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    doctorSchedules: faker.helpers.arrayElement([
                        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                            dayOfWeek: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            doctorId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            endTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                            scheduleId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            startTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                        })),
                        undefined,
                    ]),
                    email: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    name: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    phoneNumber: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    specialization: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    user: faker.helpers.arrayElement([
                        {
                            accessFailedCount: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            concurrencyStamp: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            email: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            id: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            lockoutEnd: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                                undefined,
                            ]),
                            normalizedEmail: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            normalizedUserName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            passwordHash: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumber: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            securityStamp: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            userName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        },
                        undefined,
                    ]),
                    userId: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                })),
                undefined,
            ]),
        },
        undefined,
    ]),
    departmentId: faker.helpers.arrayElement([
        faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), null]),
        undefined,
    ]),
    doctorId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
    doctorSchedules: faker.helpers.arrayElement([
        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
            dayOfWeek: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
            doctor: faker.helpers.arrayElement([
                {
                    appointments: faker.helpers.arrayElement([
                        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                            appointmentDate: faker.helpers.arrayElement([
                                `${faker.date.past().toISOString().split('.')[0]}Z`,
                                undefined,
                            ]),
                            appointmentId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            appointmentTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                            createdAt: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                                undefined,
                            ]),
                            diagnoses: faker.helpers.arrayElement([
                                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(
                                    () => ({
                                        appointmentId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        description: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        diagnosisDate: faker.helpers.arrayElement([
                                            `${faker.date.past().toISOString().split('.')[0]}Z`,
                                            undefined,
                                        ]),
                                        diagnosisId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        notes: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                    })
                                ),
                                undefined,
                            ]),
                            doctorId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            patient: faker.helpers.arrayElement([
                                {
                                    appointments: faker.helpers.arrayElement([[], undefined]),
                                    dateOfBirth: faker.helpers.arrayElement([
                                        faker.date.past().toISOString().split('T')[0],
                                        undefined,
                                    ]),
                                    email: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    emergencyContacts: faker.helpers.arrayElement([
                                        Array.from(
                                            { length: faker.number.int({ min: 1, max: 10 }) },
                                            (_, i) => i + 1
                                        ).map(() => ({
                                            contactId: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            email: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            name: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            patientId: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            phoneNumber: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            relationship: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                        })),
                                        undefined,
                                    ]),
                                    gender: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    healthInsurance: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    invoices: faker.helpers.arrayElement([
                                        Array.from(
                                            { length: faker.number.int({ min: 1, max: 10 }) },
                                            (_, i) => i + 1
                                        ).map(() => ({
                                            appointmentId: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([
                                                    faker.number.int({ min: undefined, max: undefined }),
                                                    null,
                                                ]),
                                                undefined,
                                            ]),
                                            invoiceDate: faker.helpers.arrayElement([
                                                `${faker.date.past().toISOString().split('.')[0]}Z`,
                                                undefined,
                                            ]),
                                            invoiceId: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            patientId: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            status: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            totalAmount: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                        })),
                                        undefined,
                                    ]),
                                    name: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    patientId: faker.helpers.arrayElement([
                                        faker.number.int({ min: undefined, max: undefined }),
                                        undefined,
                                    ]),
                                    phoneNumber: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    user: faker.helpers.arrayElement([
                                        {
                                            accessFailedCount: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            concurrencyStamp: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            email: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            emailConfirmed: faker.helpers.arrayElement([
                                                faker.datatype.boolean(),
                                                undefined,
                                            ]),
                                            id: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            lockoutEnabled: faker.helpers.arrayElement([
                                                faker.datatype.boolean(),
                                                undefined,
                                            ]),
                                            lockoutEnd: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([
                                                    `${faker.date.past().toISOString().split('.')[0]}Z`,
                                                    null,
                                                ]),
                                                undefined,
                                            ]),
                                            normalizedEmail: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            normalizedUserName: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            passwordHash: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            phoneNumber: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            phoneNumberConfirmed: faker.helpers.arrayElement([
                                                faker.datatype.boolean(),
                                                undefined,
                                            ]),
                                            securityStamp: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            twoFactorEnabled: faker.helpers.arrayElement([
                                                faker.datatype.boolean(),
                                                undefined,
                                            ]),
                                            userName: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                        },
                                        undefined,
                                    ]),
                                    userId: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                },
                                undefined,
                            ]),
                            patientId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            status: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        })),
                        undefined,
                    ]),
                    department: faker.helpers.arrayElement([
                        {
                            departmentId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            departmentName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            description: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            doctors: faker.helpers.arrayElement([[], undefined]),
                        },
                        undefined,
                    ]),
                    departmentId: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), null]),
                        undefined,
                    ]),
                    doctorId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    doctorSchedules: faker.helpers.arrayElement([[], undefined]),
                    email: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    name: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    phoneNumber: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    specialization: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    user: faker.helpers.arrayElement([
                        {
                            accessFailedCount: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            concurrencyStamp: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            email: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            id: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            lockoutEnd: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                                undefined,
                            ]),
                            normalizedEmail: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            normalizedUserName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            passwordHash: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumber: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            securityStamp: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            userName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        },
                        undefined,
                    ]),
                    userId: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                },
                undefined,
            ]),
            doctorId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
            endTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
            scheduleId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
            startTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
        })),
        undefined,
    ]),
    email: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    name: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    phoneNumber: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    specialization: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    user: faker.helpers.arrayElement([
        {
            accessFailedCount: faker.helpers.arrayElement([
                faker.number.int({ min: undefined, max: undefined }),
                undefined,
            ]),
            concurrencyStamp: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            email: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
            emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
            id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
            lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
            lockoutEnd: faker.helpers.arrayElement([
                faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                undefined,
            ]),
            normalizedEmail: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            normalizedUserName: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            passwordHash: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            phoneNumber: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
            securityStamp: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
            userName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
        },
        undefined,
    ]),
    userId: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    ...overrideResponse,
});

export const getGetApiDoctorsIdResponseMock = (overrideResponse: Partial<Doctor> = {}): Doctor => ({
    appointments: faker.helpers.arrayElement([
        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
            appointmentDate: faker.helpers.arrayElement([
                `${faker.date.past().toISOString().split('.')[0]}Z`,
                undefined,
            ]),
            appointmentId: faker.helpers.arrayElement([
                faker.number.int({ min: undefined, max: undefined }),
                undefined,
            ]),
            appointmentTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
            createdAt: faker.helpers.arrayElement([
                faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                undefined,
            ]),
            diagnoses: faker.helpers.arrayElement([
                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                    appointmentId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    description: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    diagnosisDate: faker.helpers.arrayElement([
                        `${faker.date.past().toISOString().split('.')[0]}Z`,
                        undefined,
                    ]),
                    diagnosisId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    notes: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                })),
                undefined,
            ]),
            doctor: faker.helpers.arrayElement([
                {
                    appointments: faker.helpers.arrayElement([[], undefined]),
                    department: faker.helpers.arrayElement([
                        {
                            departmentId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            departmentName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            description: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            doctors: faker.helpers.arrayElement([[], undefined]),
                        },
                        undefined,
                    ]),
                    departmentId: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), null]),
                        undefined,
                    ]),
                    doctorId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    doctorSchedules: faker.helpers.arrayElement([
                        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                            dayOfWeek: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            doctorId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            endTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                            scheduleId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            startTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                        })),
                        undefined,
                    ]),
                    email: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    name: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    phoneNumber: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    specialization: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    user: faker.helpers.arrayElement([
                        {
                            accessFailedCount: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            concurrencyStamp: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            email: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            id: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            lockoutEnd: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                                undefined,
                            ]),
                            normalizedEmail: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            normalizedUserName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            passwordHash: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumber: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            securityStamp: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            userName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        },
                        undefined,
                    ]),
                    userId: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                },
                undefined,
            ]),
            doctorId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
            patient: faker.helpers.arrayElement([
                {
                    appointments: faker.helpers.arrayElement([[], undefined]),
                    dateOfBirth: faker.helpers.arrayElement([faker.date.past().toISOString().split('T')[0], undefined]),
                    email: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    emergencyContacts: faker.helpers.arrayElement([
                        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                            contactId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            email: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            name: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            patientId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            phoneNumber: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            relationship: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        })),
                        undefined,
                    ]),
                    gender: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    healthInsurance: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    invoices: faker.helpers.arrayElement([
                        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                            appointmentId: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    null,
                                ]),
                                undefined,
                            ]),
                            invoiceDate: faker.helpers.arrayElement([
                                `${faker.date.past().toISOString().split('.')[0]}Z`,
                                undefined,
                            ]),
                            invoiceId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            patientId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            status: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            totalAmount: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                        })),
                        undefined,
                    ]),
                    name: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    patientId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    phoneNumber: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    user: faker.helpers.arrayElement([
                        {
                            accessFailedCount: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            concurrencyStamp: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            email: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            id: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            lockoutEnd: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                                undefined,
                            ]),
                            normalizedEmail: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            normalizedUserName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            passwordHash: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumber: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            securityStamp: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            userName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        },
                        undefined,
                    ]),
                    userId: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                },
                undefined,
            ]),
            patientId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
            status: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
        })),
        undefined,
    ]),
    department: faker.helpers.arrayElement([
        {
            departmentId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
            departmentName: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            description: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            doctors: faker.helpers.arrayElement([
                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                    appointments: faker.helpers.arrayElement([
                        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                            appointmentDate: faker.helpers.arrayElement([
                                `${faker.date.past().toISOString().split('.')[0]}Z`,
                                undefined,
                            ]),
                            appointmentId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            appointmentTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                            createdAt: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                                undefined,
                            ]),
                            diagnoses: faker.helpers.arrayElement([
                                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(
                                    () => ({
                                        appointmentId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        description: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        diagnosisDate: faker.helpers.arrayElement([
                                            `${faker.date.past().toISOString().split('.')[0]}Z`,
                                            undefined,
                                        ]),
                                        diagnosisId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        notes: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                    })
                                ),
                                undefined,
                            ]),
                            doctorId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            patient: faker.helpers.arrayElement([
                                {
                                    appointments: faker.helpers.arrayElement([[], undefined]),
                                    dateOfBirth: faker.helpers.arrayElement([
                                        faker.date.past().toISOString().split('T')[0],
                                        undefined,
                                    ]),
                                    email: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    emergencyContacts: faker.helpers.arrayElement([
                                        Array.from(
                                            { length: faker.number.int({ min: 1, max: 10 }) },
                                            (_, i) => i + 1
                                        ).map(() => ({
                                            contactId: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            email: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            name: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            patientId: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            phoneNumber: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            relationship: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                        })),
                                        undefined,
                                    ]),
                                    gender: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    healthInsurance: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    invoices: faker.helpers.arrayElement([
                                        Array.from(
                                            { length: faker.number.int({ min: 1, max: 10 }) },
                                            (_, i) => i + 1
                                        ).map(() => ({
                                            appointmentId: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([
                                                    faker.number.int({ min: undefined, max: undefined }),
                                                    null,
                                                ]),
                                                undefined,
                                            ]),
                                            invoiceDate: faker.helpers.arrayElement([
                                                `${faker.date.past().toISOString().split('.')[0]}Z`,
                                                undefined,
                                            ]),
                                            invoiceId: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            patientId: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            status: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            totalAmount: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                        })),
                                        undefined,
                                    ]),
                                    name: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    patientId: faker.helpers.arrayElement([
                                        faker.number.int({ min: undefined, max: undefined }),
                                        undefined,
                                    ]),
                                    phoneNumber: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    user: faker.helpers.arrayElement([
                                        {
                                            accessFailedCount: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            concurrencyStamp: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            email: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            emailConfirmed: faker.helpers.arrayElement([
                                                faker.datatype.boolean(),
                                                undefined,
                                            ]),
                                            id: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            lockoutEnabled: faker.helpers.arrayElement([
                                                faker.datatype.boolean(),
                                                undefined,
                                            ]),
                                            lockoutEnd: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([
                                                    `${faker.date.past().toISOString().split('.')[0]}Z`,
                                                    null,
                                                ]),
                                                undefined,
                                            ]),
                                            normalizedEmail: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            normalizedUserName: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            passwordHash: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            phoneNumber: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            phoneNumberConfirmed: faker.helpers.arrayElement([
                                                faker.datatype.boolean(),
                                                undefined,
                                            ]),
                                            securityStamp: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            twoFactorEnabled: faker.helpers.arrayElement([
                                                faker.datatype.boolean(),
                                                undefined,
                                            ]),
                                            userName: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                        },
                                        undefined,
                                    ]),
                                    userId: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                },
                                undefined,
                            ]),
                            patientId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            status: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        })),
                        undefined,
                    ]),
                    departmentId: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), null]),
                        undefined,
                    ]),
                    doctorId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    doctorSchedules: faker.helpers.arrayElement([
                        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                            dayOfWeek: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            doctorId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            endTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                            scheduleId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            startTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                        })),
                        undefined,
                    ]),
                    email: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    name: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    phoneNumber: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    specialization: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    user: faker.helpers.arrayElement([
                        {
                            accessFailedCount: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            concurrencyStamp: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            email: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            id: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            lockoutEnd: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                                undefined,
                            ]),
                            normalizedEmail: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            normalizedUserName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            passwordHash: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumber: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            securityStamp: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            userName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        },
                        undefined,
                    ]),
                    userId: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                })),
                undefined,
            ]),
        },
        undefined,
    ]),
    departmentId: faker.helpers.arrayElement([
        faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), null]),
        undefined,
    ]),
    doctorId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
    doctorSchedules: faker.helpers.arrayElement([
        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
            dayOfWeek: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
            doctor: faker.helpers.arrayElement([
                {
                    appointments: faker.helpers.arrayElement([
                        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                            appointmentDate: faker.helpers.arrayElement([
                                `${faker.date.past().toISOString().split('.')[0]}Z`,
                                undefined,
                            ]),
                            appointmentId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            appointmentTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                            createdAt: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                                undefined,
                            ]),
                            diagnoses: faker.helpers.arrayElement([
                                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(
                                    () => ({
                                        appointmentId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        description: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        diagnosisDate: faker.helpers.arrayElement([
                                            `${faker.date.past().toISOString().split('.')[0]}Z`,
                                            undefined,
                                        ]),
                                        diagnosisId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        notes: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                    })
                                ),
                                undefined,
                            ]),
                            doctorId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            patient: faker.helpers.arrayElement([
                                {
                                    appointments: faker.helpers.arrayElement([[], undefined]),
                                    dateOfBirth: faker.helpers.arrayElement([
                                        faker.date.past().toISOString().split('T')[0],
                                        undefined,
                                    ]),
                                    email: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    emergencyContacts: faker.helpers.arrayElement([
                                        Array.from(
                                            { length: faker.number.int({ min: 1, max: 10 }) },
                                            (_, i) => i + 1
                                        ).map(() => ({
                                            contactId: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            email: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            name: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            patientId: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            phoneNumber: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            relationship: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                        })),
                                        undefined,
                                    ]),
                                    gender: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    healthInsurance: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    invoices: faker.helpers.arrayElement([
                                        Array.from(
                                            { length: faker.number.int({ min: 1, max: 10 }) },
                                            (_, i) => i + 1
                                        ).map(() => ({
                                            appointmentId: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([
                                                    faker.number.int({ min: undefined, max: undefined }),
                                                    null,
                                                ]),
                                                undefined,
                                            ]),
                                            invoiceDate: faker.helpers.arrayElement([
                                                `${faker.date.past().toISOString().split('.')[0]}Z`,
                                                undefined,
                                            ]),
                                            invoiceId: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            patientId: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            status: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            totalAmount: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                        })),
                                        undefined,
                                    ]),
                                    name: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    patientId: faker.helpers.arrayElement([
                                        faker.number.int({ min: undefined, max: undefined }),
                                        undefined,
                                    ]),
                                    phoneNumber: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    user: faker.helpers.arrayElement([
                                        {
                                            accessFailedCount: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            concurrencyStamp: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            email: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            emailConfirmed: faker.helpers.arrayElement([
                                                faker.datatype.boolean(),
                                                undefined,
                                            ]),
                                            id: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            lockoutEnabled: faker.helpers.arrayElement([
                                                faker.datatype.boolean(),
                                                undefined,
                                            ]),
                                            lockoutEnd: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([
                                                    `${faker.date.past().toISOString().split('.')[0]}Z`,
                                                    null,
                                                ]),
                                                undefined,
                                            ]),
                                            normalizedEmail: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            normalizedUserName: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            passwordHash: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            phoneNumber: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            phoneNumberConfirmed: faker.helpers.arrayElement([
                                                faker.datatype.boolean(),
                                                undefined,
                                            ]),
                                            securityStamp: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            twoFactorEnabled: faker.helpers.arrayElement([
                                                faker.datatype.boolean(),
                                                undefined,
                                            ]),
                                            userName: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                        },
                                        undefined,
                                    ]),
                                    userId: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                },
                                undefined,
                            ]),
                            patientId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            status: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        })),
                        undefined,
                    ]),
                    department: faker.helpers.arrayElement([
                        {
                            departmentId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            departmentName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            description: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            doctors: faker.helpers.arrayElement([[], undefined]),
                        },
                        undefined,
                    ]),
                    departmentId: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), null]),
                        undefined,
                    ]),
                    doctorId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    doctorSchedules: faker.helpers.arrayElement([[], undefined]),
                    email: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    name: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    phoneNumber: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    specialization: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    user: faker.helpers.arrayElement([
                        {
                            accessFailedCount: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            concurrencyStamp: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            email: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            id: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            lockoutEnd: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                                undefined,
                            ]),
                            normalizedEmail: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            normalizedUserName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            passwordHash: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumber: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            securityStamp: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            userName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        },
                        undefined,
                    ]),
                    userId: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                },
                undefined,
            ]),
            doctorId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
            endTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
            scheduleId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
            startTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
        })),
        undefined,
    ]),
    email: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    name: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    phoneNumber: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    specialization: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    user: faker.helpers.arrayElement([
        {
            accessFailedCount: faker.helpers.arrayElement([
                faker.number.int({ min: undefined, max: undefined }),
                undefined,
            ]),
            concurrencyStamp: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            email: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
            emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
            id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
            lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
            lockoutEnd: faker.helpers.arrayElement([
                faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                undefined,
            ]),
            normalizedEmail: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            normalizedUserName: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            passwordHash: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            phoneNumber: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
            securityStamp: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
            userName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
        },
        undefined,
    ]),
    userId: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    ...overrideResponse,
});

export const getGetApiDoctorSchedulesResponseMock = (): DoctorSchedule[] =>
    Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
        dayOfWeek: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
        doctor: faker.helpers.arrayElement([
            {
                appointments: faker.helpers.arrayElement([
                    Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                        appointmentDate: faker.helpers.arrayElement([
                            `${faker.date.past().toISOString().split('.')[0]}Z`,
                            undefined,
                        ]),
                        appointmentId: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        appointmentTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                        createdAt: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                            undefined,
                        ]),
                        diagnoses: faker.helpers.arrayElement([
                            Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                                appointmentId: faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    undefined,
                                ]),
                                description: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                diagnosisDate: faker.helpers.arrayElement([
                                    `${faker.date.past().toISOString().split('.')[0]}Z`,
                                    undefined,
                                ]),
                                diagnosisId: faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    undefined,
                                ]),
                                notes: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                            })),
                            undefined,
                        ]),
                        doctorId: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        patient: faker.helpers.arrayElement([
                            {
                                appointments: faker.helpers.arrayElement([[], undefined]),
                                dateOfBirth: faker.helpers.arrayElement([
                                    faker.date.past().toISOString().split('T')[0],
                                    undefined,
                                ]),
                                email: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                emergencyContacts: faker.helpers.arrayElement([
                                    Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(
                                        () => ({
                                            contactId: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            email: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            name: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            patientId: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            phoneNumber: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            relationship: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                        })
                                    ),
                                    undefined,
                                ]),
                                gender: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                healthInsurance: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                invoices: faker.helpers.arrayElement([
                                    Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(
                                        () => ({
                                            appointmentId: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([
                                                    faker.number.int({ min: undefined, max: undefined }),
                                                    null,
                                                ]),
                                                undefined,
                                            ]),
                                            invoiceDate: faker.helpers.arrayElement([
                                                `${faker.date.past().toISOString().split('.')[0]}Z`,
                                                undefined,
                                            ]),
                                            invoiceId: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            patientId: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            status: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            totalAmount: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                        })
                                    ),
                                    undefined,
                                ]),
                                name: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                patientId: faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    undefined,
                                ]),
                                phoneNumber: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                user: faker.helpers.arrayElement([
                                    {
                                        accessFailedCount: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        concurrencyStamp: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        email: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        emailConfirmed: faker.helpers.arrayElement([
                                            faker.datatype.boolean(),
                                            undefined,
                                        ]),
                                        id: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        lockoutEnabled: faker.helpers.arrayElement([
                                            faker.datatype.boolean(),
                                            undefined,
                                        ]),
                                        lockoutEnd: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([
                                                `${faker.date.past().toISOString().split('.')[0]}Z`,
                                                null,
                                            ]),
                                            undefined,
                                        ]),
                                        normalizedEmail: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        normalizedUserName: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        passwordHash: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        phoneNumber: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        phoneNumberConfirmed: faker.helpers.arrayElement([
                                            faker.datatype.boolean(),
                                            undefined,
                                        ]),
                                        securityStamp: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        twoFactorEnabled: faker.helpers.arrayElement([
                                            faker.datatype.boolean(),
                                            undefined,
                                        ]),
                                        userName: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                    },
                                    undefined,
                                ]),
                                userId: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                            },
                            undefined,
                        ]),
                        patientId: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        status: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                    })),
                    undefined,
                ]),
                department: faker.helpers.arrayElement([
                    {
                        departmentId: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        departmentName: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        description: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        doctors: faker.helpers.arrayElement([[], undefined]),
                    },
                    undefined,
                ]),
                departmentId: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), null]),
                    undefined,
                ]),
                doctorId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
                doctorSchedules: faker.helpers.arrayElement([[], undefined]),
                email: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
                name: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
                phoneNumber: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
                specialization: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
                user: faker.helpers.arrayElement([
                    {
                        accessFailedCount: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        concurrencyStamp: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        email: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                        id: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                        lockoutEnd: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                            undefined,
                        ]),
                        normalizedEmail: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        normalizedUserName: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        passwordHash: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        phoneNumber: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                        securityStamp: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                        userName: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                    },
                    undefined,
                ]),
                userId: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
            },
            undefined,
        ]),
        doctorId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
        endTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
        scheduleId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
        startTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
    }));

export const getPostApiDoctorSchedulesResponseMock = (
    overrideResponse: Partial<DoctorSchedule> = {}
): DoctorSchedule => ({
    dayOfWeek: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
    doctor: faker.helpers.arrayElement([
        {
            appointments: faker.helpers.arrayElement([
                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                    appointmentDate: faker.helpers.arrayElement([
                        `${faker.date.past().toISOString().split('.')[0]}Z`,
                        undefined,
                    ]),
                    appointmentId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    appointmentTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                    createdAt: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                        undefined,
                    ]),
                    diagnoses: faker.helpers.arrayElement([
                        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                            appointmentId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            description: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            diagnosisDate: faker.helpers.arrayElement([
                                `${faker.date.past().toISOString().split('.')[0]}Z`,
                                undefined,
                            ]),
                            diagnosisId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            notes: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        })),
                        undefined,
                    ]),
                    doctorId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    patient: faker.helpers.arrayElement([
                        {
                            appointments: faker.helpers.arrayElement([[], undefined]),
                            dateOfBirth: faker.helpers.arrayElement([
                                faker.date.past().toISOString().split('T')[0],
                                undefined,
                            ]),
                            email: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            emergencyContacts: faker.helpers.arrayElement([
                                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(
                                    () => ({
                                        contactId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        email: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        name: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        patientId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        phoneNumber: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        relationship: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                    })
                                ),
                                undefined,
                            ]),
                            gender: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            healthInsurance: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            invoices: faker.helpers.arrayElement([
                                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(
                                    () => ({
                                        appointmentId: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                null,
                                            ]),
                                            undefined,
                                        ]),
                                        invoiceDate: faker.helpers.arrayElement([
                                            `${faker.date.past().toISOString().split('.')[0]}Z`,
                                            undefined,
                                        ]),
                                        invoiceId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        patientId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        status: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        totalAmount: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                    })
                                ),
                                undefined,
                            ]),
                            name: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            patientId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            phoneNumber: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            user: faker.helpers.arrayElement([
                                {
                                    accessFailedCount: faker.helpers.arrayElement([
                                        faker.number.int({ min: undefined, max: undefined }),
                                        undefined,
                                    ]),
                                    concurrencyStamp: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    email: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    id: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    lockoutEnd: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([
                                            `${faker.date.past().toISOString().split('.')[0]}Z`,
                                            null,
                                        ]),
                                        undefined,
                                    ]),
                                    normalizedEmail: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    normalizedUserName: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    passwordHash: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    phoneNumber: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    phoneNumberConfirmed: faker.helpers.arrayElement([
                                        faker.datatype.boolean(),
                                        undefined,
                                    ]),
                                    securityStamp: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    userName: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                },
                                undefined,
                            ]),
                            userId: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        },
                        undefined,
                    ]),
                    patientId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    status: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                })),
                undefined,
            ]),
            department: faker.helpers.arrayElement([
                {
                    departmentId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    departmentName: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    description: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    doctors: faker.helpers.arrayElement([[], undefined]),
                },
                undefined,
            ]),
            departmentId: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), null]),
                undefined,
            ]),
            doctorId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
            doctorSchedules: faker.helpers.arrayElement([
                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                    dayOfWeek: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    doctorId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    endTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                    scheduleId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    startTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                })),
                undefined,
            ]),
            email: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
            name: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
            phoneNumber: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            specialization: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            user: faker.helpers.arrayElement([
                {
                    accessFailedCount: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    concurrencyStamp: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    email: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    id: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    lockoutEnd: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                        undefined,
                    ]),
                    normalizedEmail: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    normalizedUserName: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    passwordHash: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    phoneNumber: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    securityStamp: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    userName: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                },
                undefined,
            ]),
            userId: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
        },
        undefined,
    ]),
    doctorId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
    endTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
    scheduleId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
    startTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
    ...overrideResponse,
});

export const getGetApiDoctorSchedulesIdResponseMock = (
    overrideResponse: Partial<DoctorSchedule> = {}
): DoctorSchedule => ({
    dayOfWeek: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
    doctor: faker.helpers.arrayElement([
        {
            appointments: faker.helpers.arrayElement([
                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                    appointmentDate: faker.helpers.arrayElement([
                        `${faker.date.past().toISOString().split('.')[0]}Z`,
                        undefined,
                    ]),
                    appointmentId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    appointmentTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                    createdAt: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                        undefined,
                    ]),
                    diagnoses: faker.helpers.arrayElement([
                        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                            appointmentId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            description: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            diagnosisDate: faker.helpers.arrayElement([
                                `${faker.date.past().toISOString().split('.')[0]}Z`,
                                undefined,
                            ]),
                            diagnosisId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            notes: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        })),
                        undefined,
                    ]),
                    doctorId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    patient: faker.helpers.arrayElement([
                        {
                            appointments: faker.helpers.arrayElement([[], undefined]),
                            dateOfBirth: faker.helpers.arrayElement([
                                faker.date.past().toISOString().split('T')[0],
                                undefined,
                            ]),
                            email: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            emergencyContacts: faker.helpers.arrayElement([
                                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(
                                    () => ({
                                        contactId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        email: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        name: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        patientId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        phoneNumber: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        relationship: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                    })
                                ),
                                undefined,
                            ]),
                            gender: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            healthInsurance: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            invoices: faker.helpers.arrayElement([
                                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(
                                    () => ({
                                        appointmentId: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                null,
                                            ]),
                                            undefined,
                                        ]),
                                        invoiceDate: faker.helpers.arrayElement([
                                            `${faker.date.past().toISOString().split('.')[0]}Z`,
                                            undefined,
                                        ]),
                                        invoiceId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        patientId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        status: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        totalAmount: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                    })
                                ),
                                undefined,
                            ]),
                            name: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            patientId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            phoneNumber: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            user: faker.helpers.arrayElement([
                                {
                                    accessFailedCount: faker.helpers.arrayElement([
                                        faker.number.int({ min: undefined, max: undefined }),
                                        undefined,
                                    ]),
                                    concurrencyStamp: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    email: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    id: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    lockoutEnd: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([
                                            `${faker.date.past().toISOString().split('.')[0]}Z`,
                                            null,
                                        ]),
                                        undefined,
                                    ]),
                                    normalizedEmail: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    normalizedUserName: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    passwordHash: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    phoneNumber: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    phoneNumberConfirmed: faker.helpers.arrayElement([
                                        faker.datatype.boolean(),
                                        undefined,
                                    ]),
                                    securityStamp: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    userName: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                },
                                undefined,
                            ]),
                            userId: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        },
                        undefined,
                    ]),
                    patientId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    status: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                })),
                undefined,
            ]),
            department: faker.helpers.arrayElement([
                {
                    departmentId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    departmentName: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    description: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    doctors: faker.helpers.arrayElement([[], undefined]),
                },
                undefined,
            ]),
            departmentId: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), null]),
                undefined,
            ]),
            doctorId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
            doctorSchedules: faker.helpers.arrayElement([
                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                    dayOfWeek: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    doctorId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    endTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                    scheduleId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    startTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                })),
                undefined,
            ]),
            email: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
            name: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
            phoneNumber: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            specialization: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            user: faker.helpers.arrayElement([
                {
                    accessFailedCount: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    concurrencyStamp: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    email: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    id: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    lockoutEnd: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                        undefined,
                    ]),
                    normalizedEmail: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    normalizedUserName: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    passwordHash: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    phoneNumber: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    securityStamp: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    userName: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                },
                undefined,
            ]),
            userId: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
        },
        undefined,
    ]),
    doctorId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
    endTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
    scheduleId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
    startTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
    ...overrideResponse,
});

export const getGetApiDoctorSchedulesDoctorScheduleDoctorIdResponseMock = (): DoctorSchedule[] =>
    Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
        dayOfWeek: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
        doctor: faker.helpers.arrayElement([
            {
                appointments: faker.helpers.arrayElement([
                    Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                        appointmentDate: faker.helpers.arrayElement([
                            `${faker.date.past().toISOString().split('.')[0]}Z`,
                            undefined,
                        ]),
                        appointmentId: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        appointmentTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                        createdAt: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                            undefined,
                        ]),
                        diagnoses: faker.helpers.arrayElement([
                            Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                                appointmentId: faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    undefined,
                                ]),
                                description: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                diagnosisDate: faker.helpers.arrayElement([
                                    `${faker.date.past().toISOString().split('.')[0]}Z`,
                                    undefined,
                                ]),
                                diagnosisId: faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    undefined,
                                ]),
                                notes: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                            })),
                            undefined,
                        ]),
                        doctorId: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        patient: faker.helpers.arrayElement([
                            {
                                appointments: faker.helpers.arrayElement([[], undefined]),
                                dateOfBirth: faker.helpers.arrayElement([
                                    faker.date.past().toISOString().split('T')[0],
                                    undefined,
                                ]),
                                email: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                emergencyContacts: faker.helpers.arrayElement([
                                    Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(
                                        () => ({
                                            contactId: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            email: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            name: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            patientId: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            phoneNumber: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            relationship: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                        })
                                    ),
                                    undefined,
                                ]),
                                gender: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                healthInsurance: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                invoices: faker.helpers.arrayElement([
                                    Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(
                                        () => ({
                                            appointmentId: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([
                                                    faker.number.int({ min: undefined, max: undefined }),
                                                    null,
                                                ]),
                                                undefined,
                                            ]),
                                            invoiceDate: faker.helpers.arrayElement([
                                                `${faker.date.past().toISOString().split('.')[0]}Z`,
                                                undefined,
                                            ]),
                                            invoiceId: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            patientId: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            status: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            totalAmount: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                        })
                                    ),
                                    undefined,
                                ]),
                                name: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                patientId: faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    undefined,
                                ]),
                                phoneNumber: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                user: faker.helpers.arrayElement([
                                    {
                                        accessFailedCount: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        concurrencyStamp: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        email: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        emailConfirmed: faker.helpers.arrayElement([
                                            faker.datatype.boolean(),
                                            undefined,
                                        ]),
                                        id: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        lockoutEnabled: faker.helpers.arrayElement([
                                            faker.datatype.boolean(),
                                            undefined,
                                        ]),
                                        lockoutEnd: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([
                                                `${faker.date.past().toISOString().split('.')[0]}Z`,
                                                null,
                                            ]),
                                            undefined,
                                        ]),
                                        normalizedEmail: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        normalizedUserName: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        passwordHash: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        phoneNumber: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        phoneNumberConfirmed: faker.helpers.arrayElement([
                                            faker.datatype.boolean(),
                                            undefined,
                                        ]),
                                        securityStamp: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        twoFactorEnabled: faker.helpers.arrayElement([
                                            faker.datatype.boolean(),
                                            undefined,
                                        ]),
                                        userName: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                    },
                                    undefined,
                                ]),
                                userId: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                            },
                            undefined,
                        ]),
                        patientId: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        status: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                    })),
                    undefined,
                ]),
                department: faker.helpers.arrayElement([
                    {
                        departmentId: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        departmentName: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        description: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        doctors: faker.helpers.arrayElement([[], undefined]),
                    },
                    undefined,
                ]),
                departmentId: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), null]),
                    undefined,
                ]),
                doctorId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
                doctorSchedules: faker.helpers.arrayElement([[], undefined]),
                email: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
                name: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
                phoneNumber: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
                specialization: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
                user: faker.helpers.arrayElement([
                    {
                        accessFailedCount: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        concurrencyStamp: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        email: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                        id: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                        lockoutEnd: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                            undefined,
                        ]),
                        normalizedEmail: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        normalizedUserName: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        passwordHash: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        phoneNumber: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                        securityStamp: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                        userName: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                    },
                    undefined,
                ]),
                userId: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
            },
            undefined,
        ]),
        doctorId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
        endTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
        scheduleId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
        startTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
    }));

export const getGetApiEmergencyContactsResponseMock = (): EmergencyContact[] =>
    Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
        contactId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
        email: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
        name: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
        patient: faker.helpers.arrayElement([
            {
                appointments: faker.helpers.arrayElement([
                    Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                        appointmentDate: faker.helpers.arrayElement([
                            `${faker.date.past().toISOString().split('.')[0]}Z`,
                            undefined,
                        ]),
                        appointmentId: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        appointmentTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                        createdAt: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                            undefined,
                        ]),
                        diagnoses: faker.helpers.arrayElement([
                            Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                                appointmentId: faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    undefined,
                                ]),
                                description: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                diagnosisDate: faker.helpers.arrayElement([
                                    `${faker.date.past().toISOString().split('.')[0]}Z`,
                                    undefined,
                                ]),
                                diagnosisId: faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    undefined,
                                ]),
                                notes: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                            })),
                            undefined,
                        ]),
                        doctor: faker.helpers.arrayElement([
                            {
                                appointments: faker.helpers.arrayElement([[], undefined]),
                                department: faker.helpers.arrayElement([
                                    {
                                        departmentId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        departmentName: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        description: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        doctors: faker.helpers.arrayElement([[], undefined]),
                                    },
                                    undefined,
                                ]),
                                departmentId: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([
                                        faker.number.int({ min: undefined, max: undefined }),
                                        null,
                                    ]),
                                    undefined,
                                ]),
                                doctorId: faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    undefined,
                                ]),
                                doctorSchedules: faker.helpers.arrayElement([
                                    Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(
                                        () => ({
                                            dayOfWeek: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            doctorId: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            endTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                                            scheduleId: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            startTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                                        })
                                    ),
                                    undefined,
                                ]),
                                email: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                name: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                phoneNumber: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                specialization: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                user: faker.helpers.arrayElement([
                                    {
                                        accessFailedCount: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        concurrencyStamp: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        email: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        emailConfirmed: faker.helpers.arrayElement([
                                            faker.datatype.boolean(),
                                            undefined,
                                        ]),
                                        id: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        lockoutEnabled: faker.helpers.arrayElement([
                                            faker.datatype.boolean(),
                                            undefined,
                                        ]),
                                        lockoutEnd: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([
                                                `${faker.date.past().toISOString().split('.')[0]}Z`,
                                                null,
                                            ]),
                                            undefined,
                                        ]),
                                        normalizedEmail: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        normalizedUserName: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        passwordHash: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        phoneNumber: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        phoneNumberConfirmed: faker.helpers.arrayElement([
                                            faker.datatype.boolean(),
                                            undefined,
                                        ]),
                                        securityStamp: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        twoFactorEnabled: faker.helpers.arrayElement([
                                            faker.datatype.boolean(),
                                            undefined,
                                        ]),
                                        userName: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                    },
                                    undefined,
                                ]),
                                userId: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                            },
                            undefined,
                        ]),
                        doctorId: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        patientId: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        status: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                    })),
                    undefined,
                ]),
                dateOfBirth: faker.helpers.arrayElement([faker.date.past().toISOString().split('T')[0], undefined]),
                email: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
                emergencyContacts: faker.helpers.arrayElement([[], undefined]),
                gender: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
                healthInsurance: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
                invoices: faker.helpers.arrayElement([
                    Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                        appointmentId: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), null]),
                            undefined,
                        ]),
                        invoiceDate: faker.helpers.arrayElement([
                            `${faker.date.past().toISOString().split('.')[0]}Z`,
                            undefined,
                        ]),
                        invoiceId: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        patientId: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        status: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        totalAmount: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                    })),
                    undefined,
                ]),
                name: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
                patientId: faker.helpers.arrayElement([
                    faker.number.int({ min: undefined, max: undefined }),
                    undefined,
                ]),
                phoneNumber: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
                user: faker.helpers.arrayElement([
                    {
                        accessFailedCount: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        concurrencyStamp: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        email: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                        id: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                        lockoutEnd: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                            undefined,
                        ]),
                        normalizedEmail: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        normalizedUserName: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        passwordHash: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        phoneNumber: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                        securityStamp: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                        userName: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                    },
                    undefined,
                ]),
                userId: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
            },
            undefined,
        ]),
        patientId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
        phoneNumber: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
        relationship: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    }));

export const getPostApiEmergencyContactsResponseMock = (
    overrideResponse: Partial<EmergencyContact> = {}
): EmergencyContact => ({
    contactId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
    email: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    name: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    patient: faker.helpers.arrayElement([
        {
            appointments: faker.helpers.arrayElement([
                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                    appointmentDate: faker.helpers.arrayElement([
                        `${faker.date.past().toISOString().split('.')[0]}Z`,
                        undefined,
                    ]),
                    appointmentId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    appointmentTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                    createdAt: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                        undefined,
                    ]),
                    diagnoses: faker.helpers.arrayElement([
                        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                            appointmentId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            description: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            diagnosisDate: faker.helpers.arrayElement([
                                `${faker.date.past().toISOString().split('.')[0]}Z`,
                                undefined,
                            ]),
                            diagnosisId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            notes: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        })),
                        undefined,
                    ]),
                    doctor: faker.helpers.arrayElement([
                        {
                            appointments: faker.helpers.arrayElement([[], undefined]),
                            department: faker.helpers.arrayElement([
                                {
                                    departmentId: faker.helpers.arrayElement([
                                        faker.number.int({ min: undefined, max: undefined }),
                                        undefined,
                                    ]),
                                    departmentName: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    description: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    doctors: faker.helpers.arrayElement([[], undefined]),
                                },
                                undefined,
                            ]),
                            departmentId: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    null,
                                ]),
                                undefined,
                            ]),
                            doctorId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            doctorSchedules: faker.helpers.arrayElement([
                                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(
                                    () => ({
                                        dayOfWeek: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        doctorId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        endTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                                        scheduleId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        startTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                                    })
                                ),
                                undefined,
                            ]),
                            email: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            name: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumber: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            specialization: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            user: faker.helpers.arrayElement([
                                {
                                    accessFailedCount: faker.helpers.arrayElement([
                                        faker.number.int({ min: undefined, max: undefined }),
                                        undefined,
                                    ]),
                                    concurrencyStamp: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    email: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    id: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    lockoutEnd: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([
                                            `${faker.date.past().toISOString().split('.')[0]}Z`,
                                            null,
                                        ]),
                                        undefined,
                                    ]),
                                    normalizedEmail: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    normalizedUserName: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    passwordHash: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    phoneNumber: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    phoneNumberConfirmed: faker.helpers.arrayElement([
                                        faker.datatype.boolean(),
                                        undefined,
                                    ]),
                                    securityStamp: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    userName: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                },
                                undefined,
                            ]),
                            userId: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        },
                        undefined,
                    ]),
                    doctorId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    patientId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    status: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                })),
                undefined,
            ]),
            dateOfBirth: faker.helpers.arrayElement([faker.date.past().toISOString().split('T')[0], undefined]),
            email: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
            emergencyContacts: faker.helpers.arrayElement([
                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                    contactId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    email: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    name: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    patientId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    phoneNumber: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    relationship: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                })),
                undefined,
            ]),
            gender: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
            healthInsurance: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            invoices: faker.helpers.arrayElement([
                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                    appointmentId: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), null]),
                        undefined,
                    ]),
                    invoiceDate: faker.helpers.arrayElement([
                        `${faker.date.past().toISOString().split('.')[0]}Z`,
                        undefined,
                    ]),
                    invoiceId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    patientId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    status: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    totalAmount: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                })),
                undefined,
            ]),
            name: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
            patientId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
            phoneNumber: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            user: faker.helpers.arrayElement([
                {
                    accessFailedCount: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    concurrencyStamp: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    email: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    id: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    lockoutEnd: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                        undefined,
                    ]),
                    normalizedEmail: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    normalizedUserName: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    passwordHash: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    phoneNumber: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    securityStamp: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    userName: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                },
                undefined,
            ]),
            userId: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
        },
        undefined,
    ]),
    patientId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
    phoneNumber: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    relationship: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    ...overrideResponse,
});

export const getGetApiEmergencyContactsIdResponseMock = (
    overrideResponse: Partial<EmergencyContact> = {}
): EmergencyContact => ({
    contactId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
    email: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    name: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    patient: faker.helpers.arrayElement([
        {
            appointments: faker.helpers.arrayElement([
                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                    appointmentDate: faker.helpers.arrayElement([
                        `${faker.date.past().toISOString().split('.')[0]}Z`,
                        undefined,
                    ]),
                    appointmentId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    appointmentTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                    createdAt: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                        undefined,
                    ]),
                    diagnoses: faker.helpers.arrayElement([
                        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                            appointmentId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            description: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            diagnosisDate: faker.helpers.arrayElement([
                                `${faker.date.past().toISOString().split('.')[0]}Z`,
                                undefined,
                            ]),
                            diagnosisId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            notes: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        })),
                        undefined,
                    ]),
                    doctor: faker.helpers.arrayElement([
                        {
                            appointments: faker.helpers.arrayElement([[], undefined]),
                            department: faker.helpers.arrayElement([
                                {
                                    departmentId: faker.helpers.arrayElement([
                                        faker.number.int({ min: undefined, max: undefined }),
                                        undefined,
                                    ]),
                                    departmentName: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    description: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    doctors: faker.helpers.arrayElement([[], undefined]),
                                },
                                undefined,
                            ]),
                            departmentId: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    null,
                                ]),
                                undefined,
                            ]),
                            doctorId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            doctorSchedules: faker.helpers.arrayElement([
                                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(
                                    () => ({
                                        dayOfWeek: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        doctorId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        endTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                                        scheduleId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        startTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                                    })
                                ),
                                undefined,
                            ]),
                            email: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            name: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumber: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            specialization: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            user: faker.helpers.arrayElement([
                                {
                                    accessFailedCount: faker.helpers.arrayElement([
                                        faker.number.int({ min: undefined, max: undefined }),
                                        undefined,
                                    ]),
                                    concurrencyStamp: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    email: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    id: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    lockoutEnd: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([
                                            `${faker.date.past().toISOString().split('.')[0]}Z`,
                                            null,
                                        ]),
                                        undefined,
                                    ]),
                                    normalizedEmail: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    normalizedUserName: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    passwordHash: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    phoneNumber: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    phoneNumberConfirmed: faker.helpers.arrayElement([
                                        faker.datatype.boolean(),
                                        undefined,
                                    ]),
                                    securityStamp: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    userName: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                },
                                undefined,
                            ]),
                            userId: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        },
                        undefined,
                    ]),
                    doctorId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    patientId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    status: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                })),
                undefined,
            ]),
            dateOfBirth: faker.helpers.arrayElement([faker.date.past().toISOString().split('T')[0], undefined]),
            email: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
            emergencyContacts: faker.helpers.arrayElement([
                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                    contactId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    email: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    name: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    patientId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    phoneNumber: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    relationship: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                })),
                undefined,
            ]),
            gender: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
            healthInsurance: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            invoices: faker.helpers.arrayElement([
                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                    appointmentId: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), null]),
                        undefined,
                    ]),
                    invoiceDate: faker.helpers.arrayElement([
                        `${faker.date.past().toISOString().split('.')[0]}Z`,
                        undefined,
                    ]),
                    invoiceId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    patientId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    status: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    totalAmount: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                })),
                undefined,
            ]),
            name: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
            patientId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
            phoneNumber: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            user: faker.helpers.arrayElement([
                {
                    accessFailedCount: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    concurrencyStamp: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    email: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    id: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    lockoutEnd: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                        undefined,
                    ]),
                    normalizedEmail: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    normalizedUserName: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    passwordHash: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    phoneNumber: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    securityStamp: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    userName: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                },
                undefined,
            ]),
            userId: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
        },
        undefined,
    ]),
    patientId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
    phoneNumber: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    relationship: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    ...overrideResponse,
});

export const getGetApiInvoicesResponseMock = (): Invoice[] =>
    Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
        appointmentId: faker.helpers.arrayElement([
            faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), null]),
            undefined,
        ]),
        invoiceDate: faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, undefined]),
        invoiceId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
        patient: faker.helpers.arrayElement([
            {
                appointments: faker.helpers.arrayElement([
                    Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                        appointmentDate: faker.helpers.arrayElement([
                            `${faker.date.past().toISOString().split('.')[0]}Z`,
                            undefined,
                        ]),
                        appointmentId: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        appointmentTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                        createdAt: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                            undefined,
                        ]),
                        diagnoses: faker.helpers.arrayElement([
                            Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                                appointmentId: faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    undefined,
                                ]),
                                description: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                diagnosisDate: faker.helpers.arrayElement([
                                    `${faker.date.past().toISOString().split('.')[0]}Z`,
                                    undefined,
                                ]),
                                diagnosisId: faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    undefined,
                                ]),
                                notes: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                            })),
                            undefined,
                        ]),
                        doctor: faker.helpers.arrayElement([
                            {
                                appointments: faker.helpers.arrayElement([[], undefined]),
                                department: faker.helpers.arrayElement([
                                    {
                                        departmentId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        departmentName: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        description: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        doctors: faker.helpers.arrayElement([[], undefined]),
                                    },
                                    undefined,
                                ]),
                                departmentId: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([
                                        faker.number.int({ min: undefined, max: undefined }),
                                        null,
                                    ]),
                                    undefined,
                                ]),
                                doctorId: faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    undefined,
                                ]),
                                doctorSchedules: faker.helpers.arrayElement([
                                    Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(
                                        () => ({
                                            dayOfWeek: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            doctorId: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            endTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                                            scheduleId: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            startTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                                        })
                                    ),
                                    undefined,
                                ]),
                                email: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                name: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                phoneNumber: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                specialization: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                user: faker.helpers.arrayElement([
                                    {
                                        accessFailedCount: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        concurrencyStamp: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        email: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        emailConfirmed: faker.helpers.arrayElement([
                                            faker.datatype.boolean(),
                                            undefined,
                                        ]),
                                        id: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        lockoutEnabled: faker.helpers.arrayElement([
                                            faker.datatype.boolean(),
                                            undefined,
                                        ]),
                                        lockoutEnd: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([
                                                `${faker.date.past().toISOString().split('.')[0]}Z`,
                                                null,
                                            ]),
                                            undefined,
                                        ]),
                                        normalizedEmail: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        normalizedUserName: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        passwordHash: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        phoneNumber: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        phoneNumberConfirmed: faker.helpers.arrayElement([
                                            faker.datatype.boolean(),
                                            undefined,
                                        ]),
                                        securityStamp: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        twoFactorEnabled: faker.helpers.arrayElement([
                                            faker.datatype.boolean(),
                                            undefined,
                                        ]),
                                        userName: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                    },
                                    undefined,
                                ]),
                                userId: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                            },
                            undefined,
                        ]),
                        doctorId: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        patientId: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        status: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                    })),
                    undefined,
                ]),
                dateOfBirth: faker.helpers.arrayElement([faker.date.past().toISOString().split('T')[0], undefined]),
                email: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
                emergencyContacts: faker.helpers.arrayElement([
                    Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                        contactId: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        email: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        name: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        patientId: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        phoneNumber: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        relationship: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                    })),
                    undefined,
                ]),
                gender: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
                healthInsurance: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
                invoices: faker.helpers.arrayElement([[], undefined]),
                name: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
                patientId: faker.helpers.arrayElement([
                    faker.number.int({ min: undefined, max: undefined }),
                    undefined,
                ]),
                phoneNumber: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
                user: faker.helpers.arrayElement([
                    {
                        accessFailedCount: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        concurrencyStamp: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        email: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                        id: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                        lockoutEnd: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                            undefined,
                        ]),
                        normalizedEmail: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        normalizedUserName: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        passwordHash: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        phoneNumber: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                        securityStamp: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                        userName: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                    },
                    undefined,
                ]),
                userId: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
            },
            undefined,
        ]),
        patientId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
        status: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
        totalAmount: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
    }));

export const getPostApiInvoicesResponseMock = (overrideResponse: Partial<Invoice> = {}): Invoice => ({
    appointmentId: faker.helpers.arrayElement([
        faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), null]),
        undefined,
    ]),
    invoiceDate: faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, undefined]),
    invoiceId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
    patient: faker.helpers.arrayElement([
        {
            appointments: faker.helpers.arrayElement([
                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                    appointmentDate: faker.helpers.arrayElement([
                        `${faker.date.past().toISOString().split('.')[0]}Z`,
                        undefined,
                    ]),
                    appointmentId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    appointmentTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                    createdAt: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                        undefined,
                    ]),
                    diagnoses: faker.helpers.arrayElement([
                        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                            appointmentId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            description: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            diagnosisDate: faker.helpers.arrayElement([
                                `${faker.date.past().toISOString().split('.')[0]}Z`,
                                undefined,
                            ]),
                            diagnosisId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            notes: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        })),
                        undefined,
                    ]),
                    doctor: faker.helpers.arrayElement([
                        {
                            appointments: faker.helpers.arrayElement([[], undefined]),
                            department: faker.helpers.arrayElement([
                                {
                                    departmentId: faker.helpers.arrayElement([
                                        faker.number.int({ min: undefined, max: undefined }),
                                        undefined,
                                    ]),
                                    departmentName: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    description: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    doctors: faker.helpers.arrayElement([[], undefined]),
                                },
                                undefined,
                            ]),
                            departmentId: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    null,
                                ]),
                                undefined,
                            ]),
                            doctorId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            doctorSchedules: faker.helpers.arrayElement([
                                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(
                                    () => ({
                                        dayOfWeek: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        doctorId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        endTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                                        scheduleId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        startTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                                    })
                                ),
                                undefined,
                            ]),
                            email: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            name: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumber: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            specialization: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            user: faker.helpers.arrayElement([
                                {
                                    accessFailedCount: faker.helpers.arrayElement([
                                        faker.number.int({ min: undefined, max: undefined }),
                                        undefined,
                                    ]),
                                    concurrencyStamp: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    email: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    id: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    lockoutEnd: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([
                                            `${faker.date.past().toISOString().split('.')[0]}Z`,
                                            null,
                                        ]),
                                        undefined,
                                    ]),
                                    normalizedEmail: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    normalizedUserName: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    passwordHash: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    phoneNumber: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    phoneNumberConfirmed: faker.helpers.arrayElement([
                                        faker.datatype.boolean(),
                                        undefined,
                                    ]),
                                    securityStamp: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    userName: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                },
                                undefined,
                            ]),
                            userId: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        },
                        undefined,
                    ]),
                    doctorId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    patientId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    status: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                })),
                undefined,
            ]),
            dateOfBirth: faker.helpers.arrayElement([faker.date.past().toISOString().split('T')[0], undefined]),
            email: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
            emergencyContacts: faker.helpers.arrayElement([
                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                    contactId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    email: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    name: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    patientId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    phoneNumber: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    relationship: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                })),
                undefined,
            ]),
            gender: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
            healthInsurance: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            invoices: faker.helpers.arrayElement([
                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                    appointmentId: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), null]),
                        undefined,
                    ]),
                    invoiceDate: faker.helpers.arrayElement([
                        `${faker.date.past().toISOString().split('.')[0]}Z`,
                        undefined,
                    ]),
                    invoiceId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    patientId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    status: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    totalAmount: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                })),
                undefined,
            ]),
            name: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
            patientId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
            phoneNumber: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            user: faker.helpers.arrayElement([
                {
                    accessFailedCount: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    concurrencyStamp: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    email: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    id: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    lockoutEnd: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                        undefined,
                    ]),
                    normalizedEmail: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    normalizedUserName: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    passwordHash: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    phoneNumber: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    securityStamp: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    userName: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                },
                undefined,
            ]),
            userId: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
        },
        undefined,
    ]),
    patientId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
    status: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    totalAmount: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
    ...overrideResponse,
});

export const getGetApiInvoicesIdResponseMock = (overrideResponse: Partial<Invoice> = {}): Invoice => ({
    appointmentId: faker.helpers.arrayElement([
        faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), null]),
        undefined,
    ]),
    invoiceDate: faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, undefined]),
    invoiceId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
    patient: faker.helpers.arrayElement([
        {
            appointments: faker.helpers.arrayElement([
                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                    appointmentDate: faker.helpers.arrayElement([
                        `${faker.date.past().toISOString().split('.')[0]}Z`,
                        undefined,
                    ]),
                    appointmentId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    appointmentTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                    createdAt: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                        undefined,
                    ]),
                    diagnoses: faker.helpers.arrayElement([
                        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                            appointmentId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            description: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            diagnosisDate: faker.helpers.arrayElement([
                                `${faker.date.past().toISOString().split('.')[0]}Z`,
                                undefined,
                            ]),
                            diagnosisId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            notes: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        })),
                        undefined,
                    ]),
                    doctor: faker.helpers.arrayElement([
                        {
                            appointments: faker.helpers.arrayElement([[], undefined]),
                            department: faker.helpers.arrayElement([
                                {
                                    departmentId: faker.helpers.arrayElement([
                                        faker.number.int({ min: undefined, max: undefined }),
                                        undefined,
                                    ]),
                                    departmentName: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    description: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    doctors: faker.helpers.arrayElement([[], undefined]),
                                },
                                undefined,
                            ]),
                            departmentId: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    null,
                                ]),
                                undefined,
                            ]),
                            doctorId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            doctorSchedules: faker.helpers.arrayElement([
                                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(
                                    () => ({
                                        dayOfWeek: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        doctorId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        endTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                                        scheduleId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        startTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                                    })
                                ),
                                undefined,
                            ]),
                            email: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            name: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumber: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            specialization: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            user: faker.helpers.arrayElement([
                                {
                                    accessFailedCount: faker.helpers.arrayElement([
                                        faker.number.int({ min: undefined, max: undefined }),
                                        undefined,
                                    ]),
                                    concurrencyStamp: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    email: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    id: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    lockoutEnd: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([
                                            `${faker.date.past().toISOString().split('.')[0]}Z`,
                                            null,
                                        ]),
                                        undefined,
                                    ]),
                                    normalizedEmail: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    normalizedUserName: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    passwordHash: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    phoneNumber: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    phoneNumberConfirmed: faker.helpers.arrayElement([
                                        faker.datatype.boolean(),
                                        undefined,
                                    ]),
                                    securityStamp: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                    userName: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                },
                                undefined,
                            ]),
                            userId: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        },
                        undefined,
                    ]),
                    doctorId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    patientId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    status: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                })),
                undefined,
            ]),
            dateOfBirth: faker.helpers.arrayElement([faker.date.past().toISOString().split('T')[0], undefined]),
            email: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
            emergencyContacts: faker.helpers.arrayElement([
                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                    contactId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    email: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    name: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    patientId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    phoneNumber: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    relationship: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                })),
                undefined,
            ]),
            gender: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
            healthInsurance: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            invoices: faker.helpers.arrayElement([
                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                    appointmentId: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), null]),
                        undefined,
                    ]),
                    invoiceDate: faker.helpers.arrayElement([
                        `${faker.date.past().toISOString().split('.')[0]}Z`,
                        undefined,
                    ]),
                    invoiceId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    patientId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    status: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    totalAmount: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                })),
                undefined,
            ]),
            name: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
            patientId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
            phoneNumber: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            user: faker.helpers.arrayElement([
                {
                    accessFailedCount: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    concurrencyStamp: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    email: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    id: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    lockoutEnd: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                        undefined,
                    ]),
                    normalizedEmail: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    normalizedUserName: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    passwordHash: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    phoneNumber: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    securityStamp: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                    userName: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                },
                undefined,
            ]),
            userId: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
        },
        undefined,
    ]),
    patientId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
    status: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    totalAmount: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
    ...overrideResponse,
});

export const getGetApiPatientsResponseMock = (): Patient[] =>
    Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
        appointments: faker.helpers.arrayElement([
            Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                appointmentDate: faker.helpers.arrayElement([
                    `${faker.date.past().toISOString().split('.')[0]}Z`,
                    undefined,
                ]),
                appointmentId: faker.helpers.arrayElement([
                    faker.number.int({ min: undefined, max: undefined }),
                    undefined,
                ]),
                appointmentTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                createdAt: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                    undefined,
                ]),
                diagnoses: faker.helpers.arrayElement([
                    Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                        appointmentId: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        description: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        diagnosisDate: faker.helpers.arrayElement([
                            `${faker.date.past().toISOString().split('.')[0]}Z`,
                            undefined,
                        ]),
                        diagnosisId: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        notes: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                    })),
                    undefined,
                ]),
                doctor: faker.helpers.arrayElement([
                    {
                        appointments: faker.helpers.arrayElement([[], undefined]),
                        department: faker.helpers.arrayElement([
                            {
                                departmentId: faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    undefined,
                                ]),
                                departmentName: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                description: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                doctors: faker.helpers.arrayElement([[], undefined]),
                            },
                            undefined,
                        ]),
                        departmentId: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), null]),
                            undefined,
                        ]),
                        doctorId: faker.helpers.arrayElement([
                            faker.number.int({ min: undefined, max: undefined }),
                            undefined,
                        ]),
                        doctorSchedules: faker.helpers.arrayElement([
                            Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                                dayOfWeek: faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    undefined,
                                ]),
                                doctorId: faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    undefined,
                                ]),
                                endTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                                scheduleId: faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    undefined,
                                ]),
                                startTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                            })),
                            undefined,
                        ]),
                        email: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        name: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        phoneNumber: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        specialization: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                        user: faker.helpers.arrayElement([
                            {
                                accessFailedCount: faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    undefined,
                                ]),
                                concurrencyStamp: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                email: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                id: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                lockoutEnd: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([
                                        `${faker.date.past().toISOString().split('.')[0]}Z`,
                                        null,
                                    ]),
                                    undefined,
                                ]),
                                normalizedEmail: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                normalizedUserName: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                passwordHash: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                phoneNumber: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                securityStamp: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                                twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                                userName: faker.helpers.arrayElement([
                                    faker.helpers.arrayElement([faker.word.sample(), null]),
                                    undefined,
                                ]),
                            },
                            undefined,
                        ]),
                        userId: faker.helpers.arrayElement([
                            faker.helpers.arrayElement([faker.word.sample(), null]),
                            undefined,
                        ]),
                    },
                    undefined,
                ]),
                doctorId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
                patientId: faker.helpers.arrayElement([
                    faker.number.int({ min: undefined, max: undefined }),
                    undefined,
                ]),
                status: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
            })),
            undefined,
        ]),
        dateOfBirth: faker.helpers.arrayElement([faker.date.past().toISOString().split('T')[0], undefined]),
        email: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
        emergencyContacts: faker.helpers.arrayElement([
            Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                contactId: faker.helpers.arrayElement([
                    faker.number.int({ min: undefined, max: undefined }),
                    undefined,
                ]),
                email: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
                name: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
                patientId: faker.helpers.arrayElement([
                    faker.number.int({ min: undefined, max: undefined }),
                    undefined,
                ]),
                phoneNumber: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
                relationship: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
            })),
            undefined,
        ]),
        gender: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
        healthInsurance: faker.helpers.arrayElement([
            faker.helpers.arrayElement([faker.word.sample(), null]),
            undefined,
        ]),
        invoices: faker.helpers.arrayElement([
            Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                appointmentId: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), null]),
                    undefined,
                ]),
                invoiceDate: faker.helpers.arrayElement([
                    `${faker.date.past().toISOString().split('.')[0]}Z`,
                    undefined,
                ]),
                invoiceId: faker.helpers.arrayElement([
                    faker.number.int({ min: undefined, max: undefined }),
                    undefined,
                ]),
                patientId: faker.helpers.arrayElement([
                    faker.number.int({ min: undefined, max: undefined }),
                    undefined,
                ]),
                status: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
                totalAmount: faker.helpers.arrayElement([
                    faker.number.int({ min: undefined, max: undefined }),
                    undefined,
                ]),
            })),
            undefined,
        ]),
        name: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
        patientId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
        phoneNumber: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
        user: faker.helpers.arrayElement([
            {
                accessFailedCount: faker.helpers.arrayElement([
                    faker.number.int({ min: undefined, max: undefined }),
                    undefined,
                ]),
                concurrencyStamp: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
                email: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
                emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
                lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                lockoutEnd: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                    undefined,
                ]),
                normalizedEmail: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
                normalizedUserName: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
                passwordHash: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
                phoneNumber: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
                phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                securityStamp: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
                twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                userName: faker.helpers.arrayElement([
                    faker.helpers.arrayElement([faker.word.sample(), null]),
                    undefined,
                ]),
            },
            undefined,
        ]),
        userId: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    }));

export const getPostApiPatientsResponseMock = (overrideResponse: Partial<Patient> = {}): Patient => ({
    appointments: faker.helpers.arrayElement([
        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
            appointmentDate: faker.helpers.arrayElement([
                `${faker.date.past().toISOString().split('.')[0]}Z`,
                undefined,
            ]),
            appointmentId: faker.helpers.arrayElement([
                faker.number.int({ min: undefined, max: undefined }),
                undefined,
            ]),
            appointmentTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
            createdAt: faker.helpers.arrayElement([
                faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                undefined,
            ]),
            diagnoses: faker.helpers.arrayElement([
                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                    appointmentId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    description: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    diagnosisDate: faker.helpers.arrayElement([
                        `${faker.date.past().toISOString().split('.')[0]}Z`,
                        undefined,
                    ]),
                    diagnosisId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    notes: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                })),
                undefined,
            ]),
            doctor: faker.helpers.arrayElement([
                {
                    appointments: faker.helpers.arrayElement([[], undefined]),
                    department: faker.helpers.arrayElement([
                        {
                            departmentId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            departmentName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            description: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            doctors: faker.helpers.arrayElement([[], undefined]),
                        },
                        undefined,
                    ]),
                    departmentId: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), null]),
                        undefined,
                    ]),
                    doctorId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    doctorSchedules: faker.helpers.arrayElement([
                        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                            dayOfWeek: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            doctorId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            endTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                            scheduleId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            startTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                        })),
                        undefined,
                    ]),
                    email: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    name: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    phoneNumber: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    specialization: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    user: faker.helpers.arrayElement([
                        {
                            accessFailedCount: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            concurrencyStamp: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            email: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            id: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            lockoutEnd: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                                undefined,
                            ]),
                            normalizedEmail: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            normalizedUserName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            passwordHash: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumber: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            securityStamp: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            userName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        },
                        undefined,
                    ]),
                    userId: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                },
                undefined,
            ]),
            doctorId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
            patient: faker.helpers.arrayElement([
                {
                    appointments: faker.helpers.arrayElement([[], undefined]),
                    dateOfBirth: faker.helpers.arrayElement([faker.date.past().toISOString().split('T')[0], undefined]),
                    email: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    emergencyContacts: faker.helpers.arrayElement([
                        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                            contactId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            email: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            name: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            patientId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            phoneNumber: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            relationship: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        })),
                        undefined,
                    ]),
                    gender: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    healthInsurance: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    invoices: faker.helpers.arrayElement([
                        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                            appointmentId: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    null,
                                ]),
                                undefined,
                            ]),
                            invoiceDate: faker.helpers.arrayElement([
                                `${faker.date.past().toISOString().split('.')[0]}Z`,
                                undefined,
                            ]),
                            invoiceId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            patientId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            status: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            totalAmount: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                        })),
                        undefined,
                    ]),
                    name: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    patientId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    phoneNumber: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    user: faker.helpers.arrayElement([
                        {
                            accessFailedCount: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            concurrencyStamp: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            email: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            id: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            lockoutEnd: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                                undefined,
                            ]),
                            normalizedEmail: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            normalizedUserName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            passwordHash: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumber: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            securityStamp: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            userName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        },
                        undefined,
                    ]),
                    userId: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                },
                undefined,
            ]),
            patientId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
            status: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
        })),
        undefined,
    ]),
    dateOfBirth: faker.helpers.arrayElement([faker.date.past().toISOString().split('T')[0], undefined]),
    email: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    emergencyContacts: faker.helpers.arrayElement([
        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
            contactId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
            email: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
            name: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
            patient: faker.helpers.arrayElement([
                {
                    appointments: faker.helpers.arrayElement([
                        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                            appointmentDate: faker.helpers.arrayElement([
                                `${faker.date.past().toISOString().split('.')[0]}Z`,
                                undefined,
                            ]),
                            appointmentId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            appointmentTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                            createdAt: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                                undefined,
                            ]),
                            diagnoses: faker.helpers.arrayElement([
                                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(
                                    () => ({
                                        appointmentId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        description: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        diagnosisDate: faker.helpers.arrayElement([
                                            `${faker.date.past().toISOString().split('.')[0]}Z`,
                                            undefined,
                                        ]),
                                        diagnosisId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        notes: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                    })
                                ),
                                undefined,
                            ]),
                            doctor: faker.helpers.arrayElement([
                                {
                                    appointments: faker.helpers.arrayElement([[], undefined]),
                                    department: faker.helpers.arrayElement([
                                        {
                                            departmentId: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            departmentName: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            description: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            doctors: faker.helpers.arrayElement([[], undefined]),
                                        },
                                        undefined,
                                    ]),
                                    departmentId: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            null,
                                        ]),
                                        undefined,
                                    ]),
                                    doctorId: faker.helpers.arrayElement([
                                        faker.number.int({ min: undefined, max: undefined }),
                                        undefined,
                                    ]),
                                    doctorSchedules: faker.helpers.arrayElement([
                                        Array.from(
                                            { length: faker.number.int({ min: 1, max: 10 }) },
                                            (_, i) => i + 1
                                        ).map(() => ({
                                            dayOfWeek: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            doctorId: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            endTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                                            scheduleId: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            startTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                                        })),
                                        undefined,
                                    ]),
                                    email: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    name: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    phoneNumber: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    specialization: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    user: faker.helpers.arrayElement([
                                        {
                                            accessFailedCount: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            concurrencyStamp: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            email: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            emailConfirmed: faker.helpers.arrayElement([
                                                faker.datatype.boolean(),
                                                undefined,
                                            ]),
                                            id: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            lockoutEnabled: faker.helpers.arrayElement([
                                                faker.datatype.boolean(),
                                                undefined,
                                            ]),
                                            lockoutEnd: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([
                                                    `${faker.date.past().toISOString().split('.')[0]}Z`,
                                                    null,
                                                ]),
                                                undefined,
                                            ]),
                                            normalizedEmail: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            normalizedUserName: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            passwordHash: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            phoneNumber: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            phoneNumberConfirmed: faker.helpers.arrayElement([
                                                faker.datatype.boolean(),
                                                undefined,
                                            ]),
                                            securityStamp: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            twoFactorEnabled: faker.helpers.arrayElement([
                                                faker.datatype.boolean(),
                                                undefined,
                                            ]),
                                            userName: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                        },
                                        undefined,
                                    ]),
                                    userId: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                },
                                undefined,
                            ]),
                            doctorId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            patientId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            status: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        })),
                        undefined,
                    ]),
                    dateOfBirth: faker.helpers.arrayElement([faker.date.past().toISOString().split('T')[0], undefined]),
                    email: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    emergencyContacts: faker.helpers.arrayElement([[], undefined]),
                    gender: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    healthInsurance: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    invoices: faker.helpers.arrayElement([
                        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                            appointmentId: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    null,
                                ]),
                                undefined,
                            ]),
                            invoiceDate: faker.helpers.arrayElement([
                                `${faker.date.past().toISOString().split('.')[0]}Z`,
                                undefined,
                            ]),
                            invoiceId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            patientId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            status: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            totalAmount: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                        })),
                        undefined,
                    ]),
                    name: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    patientId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    phoneNumber: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    user: faker.helpers.arrayElement([
                        {
                            accessFailedCount: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            concurrencyStamp: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            email: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            id: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            lockoutEnd: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                                undefined,
                            ]),
                            normalizedEmail: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            normalizedUserName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            passwordHash: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumber: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            securityStamp: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            userName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        },
                        undefined,
                    ]),
                    userId: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                },
                undefined,
            ]),
            patientId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
            phoneNumber: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            relationship: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
        })),
        undefined,
    ]),
    gender: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    healthInsurance: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    invoices: faker.helpers.arrayElement([
        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
            appointmentId: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), null]),
                undefined,
            ]),
            invoiceDate: faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, undefined]),
            invoiceId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
            patient: faker.helpers.arrayElement([
                {
                    appointments: faker.helpers.arrayElement([
                        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                            appointmentDate: faker.helpers.arrayElement([
                                `${faker.date.past().toISOString().split('.')[0]}Z`,
                                undefined,
                            ]),
                            appointmentId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            appointmentTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                            createdAt: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                                undefined,
                            ]),
                            diagnoses: faker.helpers.arrayElement([
                                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(
                                    () => ({
                                        appointmentId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        description: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        diagnosisDate: faker.helpers.arrayElement([
                                            `${faker.date.past().toISOString().split('.')[0]}Z`,
                                            undefined,
                                        ]),
                                        diagnosisId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        notes: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                    })
                                ),
                                undefined,
                            ]),
                            doctor: faker.helpers.arrayElement([
                                {
                                    appointments: faker.helpers.arrayElement([[], undefined]),
                                    department: faker.helpers.arrayElement([
                                        {
                                            departmentId: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            departmentName: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            description: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            doctors: faker.helpers.arrayElement([[], undefined]),
                                        },
                                        undefined,
                                    ]),
                                    departmentId: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            null,
                                        ]),
                                        undefined,
                                    ]),
                                    doctorId: faker.helpers.arrayElement([
                                        faker.number.int({ min: undefined, max: undefined }),
                                        undefined,
                                    ]),
                                    doctorSchedules: faker.helpers.arrayElement([
                                        Array.from(
                                            { length: faker.number.int({ min: 1, max: 10 }) },
                                            (_, i) => i + 1
                                        ).map(() => ({
                                            dayOfWeek: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            doctorId: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            endTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                                            scheduleId: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            startTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                                        })),
                                        undefined,
                                    ]),
                                    email: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    name: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    phoneNumber: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    specialization: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    user: faker.helpers.arrayElement([
                                        {
                                            accessFailedCount: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            concurrencyStamp: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            email: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            emailConfirmed: faker.helpers.arrayElement([
                                                faker.datatype.boolean(),
                                                undefined,
                                            ]),
                                            id: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            lockoutEnabled: faker.helpers.arrayElement([
                                                faker.datatype.boolean(),
                                                undefined,
                                            ]),
                                            lockoutEnd: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([
                                                    `${faker.date.past().toISOString().split('.')[0]}Z`,
                                                    null,
                                                ]),
                                                undefined,
                                            ]),
                                            normalizedEmail: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            normalizedUserName: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            passwordHash: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            phoneNumber: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            phoneNumberConfirmed: faker.helpers.arrayElement([
                                                faker.datatype.boolean(),
                                                undefined,
                                            ]),
                                            securityStamp: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            twoFactorEnabled: faker.helpers.arrayElement([
                                                faker.datatype.boolean(),
                                                undefined,
                                            ]),
                                            userName: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                        },
                                        undefined,
                                    ]),
                                    userId: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                },
                                undefined,
                            ]),
                            doctorId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            patientId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            status: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        })),
                        undefined,
                    ]),
                    dateOfBirth: faker.helpers.arrayElement([faker.date.past().toISOString().split('T')[0], undefined]),
                    email: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    emergencyContacts: faker.helpers.arrayElement([
                        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                            contactId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            email: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            name: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            patientId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            phoneNumber: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            relationship: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        })),
                        undefined,
                    ]),
                    gender: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    healthInsurance: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    invoices: faker.helpers.arrayElement([[], undefined]),
                    name: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    patientId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    phoneNumber: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    user: faker.helpers.arrayElement([
                        {
                            accessFailedCount: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            concurrencyStamp: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            email: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            id: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            lockoutEnd: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                                undefined,
                            ]),
                            normalizedEmail: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            normalizedUserName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            passwordHash: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumber: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            securityStamp: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            userName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        },
                        undefined,
                    ]),
                    userId: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                },
                undefined,
            ]),
            patientId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
            status: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
            totalAmount: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
        })),
        undefined,
    ]),
    name: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    patientId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
    phoneNumber: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    user: faker.helpers.arrayElement([
        {
            accessFailedCount: faker.helpers.arrayElement([
                faker.number.int({ min: undefined, max: undefined }),
                undefined,
            ]),
            concurrencyStamp: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            email: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
            emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
            id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
            lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
            lockoutEnd: faker.helpers.arrayElement([
                faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                undefined,
            ]),
            normalizedEmail: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            normalizedUserName: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            passwordHash: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            phoneNumber: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
            securityStamp: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
            userName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
        },
        undefined,
    ]),
    userId: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    ...overrideResponse,
});

export const getGetApiPatientsIdResponseMock = (overrideResponse: Partial<Patient> = {}): Patient => ({
    appointments: faker.helpers.arrayElement([
        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
            appointmentDate: faker.helpers.arrayElement([
                `${faker.date.past().toISOString().split('.')[0]}Z`,
                undefined,
            ]),
            appointmentId: faker.helpers.arrayElement([
                faker.number.int({ min: undefined, max: undefined }),
                undefined,
            ]),
            appointmentTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
            createdAt: faker.helpers.arrayElement([
                faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                undefined,
            ]),
            diagnoses: faker.helpers.arrayElement([
                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                    appointmentId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    description: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    diagnosisDate: faker.helpers.arrayElement([
                        `${faker.date.past().toISOString().split('.')[0]}Z`,
                        undefined,
                    ]),
                    diagnosisId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    notes: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                })),
                undefined,
            ]),
            doctor: faker.helpers.arrayElement([
                {
                    appointments: faker.helpers.arrayElement([[], undefined]),
                    department: faker.helpers.arrayElement([
                        {
                            departmentId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            departmentName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            description: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            doctors: faker.helpers.arrayElement([[], undefined]),
                        },
                        undefined,
                    ]),
                    departmentId: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), null]),
                        undefined,
                    ]),
                    doctorId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    doctorSchedules: faker.helpers.arrayElement([
                        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                            dayOfWeek: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            doctorId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            endTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                            scheduleId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            startTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                        })),
                        undefined,
                    ]),
                    email: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    name: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    phoneNumber: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    specialization: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    user: faker.helpers.arrayElement([
                        {
                            accessFailedCount: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            concurrencyStamp: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            email: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            id: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            lockoutEnd: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                                undefined,
                            ]),
                            normalizedEmail: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            normalizedUserName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            passwordHash: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumber: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            securityStamp: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            userName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        },
                        undefined,
                    ]),
                    userId: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                },
                undefined,
            ]),
            doctorId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
            patient: faker.helpers.arrayElement([
                {
                    appointments: faker.helpers.arrayElement([[], undefined]),
                    dateOfBirth: faker.helpers.arrayElement([faker.date.past().toISOString().split('T')[0], undefined]),
                    email: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    emergencyContacts: faker.helpers.arrayElement([
                        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                            contactId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            email: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            name: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            patientId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            phoneNumber: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            relationship: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        })),
                        undefined,
                    ]),
                    gender: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    healthInsurance: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    invoices: faker.helpers.arrayElement([
                        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                            appointmentId: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    null,
                                ]),
                                undefined,
                            ]),
                            invoiceDate: faker.helpers.arrayElement([
                                `${faker.date.past().toISOString().split('.')[0]}Z`,
                                undefined,
                            ]),
                            invoiceId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            patientId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            status: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            totalAmount: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                        })),
                        undefined,
                    ]),
                    name: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    patientId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    phoneNumber: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    user: faker.helpers.arrayElement([
                        {
                            accessFailedCount: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            concurrencyStamp: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            email: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            id: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            lockoutEnd: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                                undefined,
                            ]),
                            normalizedEmail: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            normalizedUserName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            passwordHash: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumber: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            securityStamp: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            userName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        },
                        undefined,
                    ]),
                    userId: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                },
                undefined,
            ]),
            patientId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
            status: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
        })),
        undefined,
    ]),
    dateOfBirth: faker.helpers.arrayElement([faker.date.past().toISOString().split('T')[0], undefined]),
    email: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    emergencyContacts: faker.helpers.arrayElement([
        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
            contactId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
            email: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
            name: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
            patient: faker.helpers.arrayElement([
                {
                    appointments: faker.helpers.arrayElement([
                        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                            appointmentDate: faker.helpers.arrayElement([
                                `${faker.date.past().toISOString().split('.')[0]}Z`,
                                undefined,
                            ]),
                            appointmentId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            appointmentTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                            createdAt: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                                undefined,
                            ]),
                            diagnoses: faker.helpers.arrayElement([
                                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(
                                    () => ({
                                        appointmentId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        description: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        diagnosisDate: faker.helpers.arrayElement([
                                            `${faker.date.past().toISOString().split('.')[0]}Z`,
                                            undefined,
                                        ]),
                                        diagnosisId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        notes: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                    })
                                ),
                                undefined,
                            ]),
                            doctor: faker.helpers.arrayElement([
                                {
                                    appointments: faker.helpers.arrayElement([[], undefined]),
                                    department: faker.helpers.arrayElement([
                                        {
                                            departmentId: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            departmentName: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            description: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            doctors: faker.helpers.arrayElement([[], undefined]),
                                        },
                                        undefined,
                                    ]),
                                    departmentId: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            null,
                                        ]),
                                        undefined,
                                    ]),
                                    doctorId: faker.helpers.arrayElement([
                                        faker.number.int({ min: undefined, max: undefined }),
                                        undefined,
                                    ]),
                                    doctorSchedules: faker.helpers.arrayElement([
                                        Array.from(
                                            { length: faker.number.int({ min: 1, max: 10 }) },
                                            (_, i) => i + 1
                                        ).map(() => ({
                                            dayOfWeek: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            doctorId: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            endTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                                            scheduleId: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            startTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                                        })),
                                        undefined,
                                    ]),
                                    email: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    name: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    phoneNumber: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    specialization: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    user: faker.helpers.arrayElement([
                                        {
                                            accessFailedCount: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            concurrencyStamp: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            email: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            emailConfirmed: faker.helpers.arrayElement([
                                                faker.datatype.boolean(),
                                                undefined,
                                            ]),
                                            id: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            lockoutEnabled: faker.helpers.arrayElement([
                                                faker.datatype.boolean(),
                                                undefined,
                                            ]),
                                            lockoutEnd: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([
                                                    `${faker.date.past().toISOString().split('.')[0]}Z`,
                                                    null,
                                                ]),
                                                undefined,
                                            ]),
                                            normalizedEmail: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            normalizedUserName: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            passwordHash: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            phoneNumber: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            phoneNumberConfirmed: faker.helpers.arrayElement([
                                                faker.datatype.boolean(),
                                                undefined,
                                            ]),
                                            securityStamp: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            twoFactorEnabled: faker.helpers.arrayElement([
                                                faker.datatype.boolean(),
                                                undefined,
                                            ]),
                                            userName: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                        },
                                        undefined,
                                    ]),
                                    userId: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                },
                                undefined,
                            ]),
                            doctorId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            patientId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            status: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        })),
                        undefined,
                    ]),
                    dateOfBirth: faker.helpers.arrayElement([faker.date.past().toISOString().split('T')[0], undefined]),
                    email: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    emergencyContacts: faker.helpers.arrayElement([[], undefined]),
                    gender: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    healthInsurance: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    invoices: faker.helpers.arrayElement([
                        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                            appointmentId: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([
                                    faker.number.int({ min: undefined, max: undefined }),
                                    null,
                                ]),
                                undefined,
                            ]),
                            invoiceDate: faker.helpers.arrayElement([
                                `${faker.date.past().toISOString().split('.')[0]}Z`,
                                undefined,
                            ]),
                            invoiceId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            patientId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            status: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            totalAmount: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                        })),
                        undefined,
                    ]),
                    name: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    patientId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    phoneNumber: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    user: faker.helpers.arrayElement([
                        {
                            accessFailedCount: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            concurrencyStamp: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            email: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            id: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            lockoutEnd: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                                undefined,
                            ]),
                            normalizedEmail: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            normalizedUserName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            passwordHash: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumber: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            securityStamp: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            userName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        },
                        undefined,
                    ]),
                    userId: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                },
                undefined,
            ]),
            patientId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
            phoneNumber: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            relationship: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
        })),
        undefined,
    ]),
    gender: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    healthInsurance: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    invoices: faker.helpers.arrayElement([
        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
            appointmentId: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), null]),
                undefined,
            ]),
            invoiceDate: faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, undefined]),
            invoiceId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
            patient: faker.helpers.arrayElement([
                {
                    appointments: faker.helpers.arrayElement([
                        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                            appointmentDate: faker.helpers.arrayElement([
                                `${faker.date.past().toISOString().split('.')[0]}Z`,
                                undefined,
                            ]),
                            appointmentId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            appointmentTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                            createdAt: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                                undefined,
                            ]),
                            diagnoses: faker.helpers.arrayElement([
                                Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(
                                    () => ({
                                        appointmentId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        description: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                        diagnosisDate: faker.helpers.arrayElement([
                                            `${faker.date.past().toISOString().split('.')[0]}Z`,
                                            undefined,
                                        ]),
                                        diagnosisId: faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            undefined,
                                        ]),
                                        notes: faker.helpers.arrayElement([
                                            faker.helpers.arrayElement([faker.word.sample(), null]),
                                            undefined,
                                        ]),
                                    })
                                ),
                                undefined,
                            ]),
                            doctor: faker.helpers.arrayElement([
                                {
                                    appointments: faker.helpers.arrayElement([[], undefined]),
                                    department: faker.helpers.arrayElement([
                                        {
                                            departmentId: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            departmentName: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            description: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            doctors: faker.helpers.arrayElement([[], undefined]),
                                        },
                                        undefined,
                                    ]),
                                    departmentId: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([
                                            faker.number.int({ min: undefined, max: undefined }),
                                            null,
                                        ]),
                                        undefined,
                                    ]),
                                    doctorId: faker.helpers.arrayElement([
                                        faker.number.int({ min: undefined, max: undefined }),
                                        undefined,
                                    ]),
                                    doctorSchedules: faker.helpers.arrayElement([
                                        Array.from(
                                            { length: faker.number.int({ min: 1, max: 10 }) },
                                            (_, i) => i + 1
                                        ).map(() => ({
                                            dayOfWeek: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            doctorId: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            endTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                                            scheduleId: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            startTime: faker.helpers.arrayElement([faker.word.sample(), undefined]),
                                        })),
                                        undefined,
                                    ]),
                                    email: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    name: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    phoneNumber: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    specialization: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                    user: faker.helpers.arrayElement([
                                        {
                                            accessFailedCount: faker.helpers.arrayElement([
                                                faker.number.int({ min: undefined, max: undefined }),
                                                undefined,
                                            ]),
                                            concurrencyStamp: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            email: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            emailConfirmed: faker.helpers.arrayElement([
                                                faker.datatype.boolean(),
                                                undefined,
                                            ]),
                                            id: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            lockoutEnabled: faker.helpers.arrayElement([
                                                faker.datatype.boolean(),
                                                undefined,
                                            ]),
                                            lockoutEnd: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([
                                                    `${faker.date.past().toISOString().split('.')[0]}Z`,
                                                    null,
                                                ]),
                                                undefined,
                                            ]),
                                            normalizedEmail: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            normalizedUserName: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            passwordHash: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            phoneNumber: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            phoneNumberConfirmed: faker.helpers.arrayElement([
                                                faker.datatype.boolean(),
                                                undefined,
                                            ]),
                                            securityStamp: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                            twoFactorEnabled: faker.helpers.arrayElement([
                                                faker.datatype.boolean(),
                                                undefined,
                                            ]),
                                            userName: faker.helpers.arrayElement([
                                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                                undefined,
                                            ]),
                                        },
                                        undefined,
                                    ]),
                                    userId: faker.helpers.arrayElement([
                                        faker.helpers.arrayElement([faker.word.sample(), null]),
                                        undefined,
                                    ]),
                                },
                                undefined,
                            ]),
                            doctorId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            patientId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            status: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        })),
                        undefined,
                    ]),
                    dateOfBirth: faker.helpers.arrayElement([faker.date.past().toISOString().split('T')[0], undefined]),
                    email: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    emergencyContacts: faker.helpers.arrayElement([
                        Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
                            contactId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            email: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            name: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            patientId: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            phoneNumber: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            relationship: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        })),
                        undefined,
                    ]),
                    gender: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    healthInsurance: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    invoices: faker.helpers.arrayElement([[], undefined]),
                    name: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    patientId: faker.helpers.arrayElement([
                        faker.number.int({ min: undefined, max: undefined }),
                        undefined,
                    ]),
                    phoneNumber: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                    user: faker.helpers.arrayElement([
                        {
                            accessFailedCount: faker.helpers.arrayElement([
                                faker.number.int({ min: undefined, max: undefined }),
                                undefined,
                            ]),
                            concurrencyStamp: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            email: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            id: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            lockoutEnd: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                                undefined,
                            ]),
                            normalizedEmail: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            normalizedUserName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            passwordHash: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumber: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            securityStamp: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                            twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
                            userName: faker.helpers.arrayElement([
                                faker.helpers.arrayElement([faker.word.sample(), null]),
                                undefined,
                            ]),
                        },
                        undefined,
                    ]),
                    userId: faker.helpers.arrayElement([
                        faker.helpers.arrayElement([faker.word.sample(), null]),
                        undefined,
                    ]),
                },
                undefined,
            ]),
            patientId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
            status: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
            totalAmount: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
        })),
        undefined,
    ]),
    name: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    patientId: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
    phoneNumber: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    user: faker.helpers.arrayElement([
        {
            accessFailedCount: faker.helpers.arrayElement([
                faker.number.int({ min: undefined, max: undefined }),
                undefined,
            ]),
            concurrencyStamp: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            email: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
            emailConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
            id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
            lockoutEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
            lockoutEnd: faker.helpers.arrayElement([
                faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, null]),
                undefined,
            ]),
            normalizedEmail: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            normalizedUserName: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            passwordHash: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            phoneNumber: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            phoneNumberConfirmed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
            securityStamp: faker.helpers.arrayElement([
                faker.helpers.arrayElement([faker.word.sample(), null]),
                undefined,
            ]),
            twoFactorEnabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
            userName: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
        },
        undefined,
    ]),
    userId: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
    ...overrideResponse,
});

export const getGetWeatherForecastResponseMock = (): WeatherForecast[] =>
    Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({
        date: faker.helpers.arrayElement([faker.date.past().toISOString().split('T')[0], undefined]),
        summary: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.word.sample(), null]), undefined]),
        temperatureC: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
        temperatureF: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]),
    }));

export const getPostApiAccountLoginMockHandler = (
    overrideResponse?: void | ((info: Parameters<Parameters<typeof http.post>[1]>[0]) => Promise<void> | void)
) => {
    return http.post('*/api/Account/Login', async (info) => {
        await delay(1000);
        if (typeof overrideResponse === 'function') {
            await overrideResponse(info);
        }
        return HttpResponse.json(null, { status: 200 });
    });
};

export const getPostApiAccountLogoutMockHandler = (
    overrideResponse?: void | ((info: Parameters<Parameters<typeof http.post>[1]>[0]) => Promise<void> | void)
) => {
    return http.post('*/api/Account/Logout', async (info) => {
        await delay(1000);
        if (typeof overrideResponse === 'function') {
            await overrideResponse(info);
        }
        return HttpResponse.json(null, { status: 200 });
    });
};

export const getGetApiAppointmentsMockHandler = (
    overrideResponse?:
        | Appointment[]
        | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<Appointment[]> | Appointment[])
) => {
    return http.get('*/api/Appointments', async (info) => {
        await delay(1000);

        return HttpResponse.json(getGetApiAppointmentsResponseMock(), {
            status: 200,
            headers: { 'Content-Type': 'text/plain' },
        });
    });
};

export const getPostApiAppointmentsMockHandler = (
    overrideResponse?:
        | Appointment
        | ((info: Parameters<Parameters<typeof http.post>[1]>[0]) => Promise<Appointment> | Appointment)
) => {
    return http.post('*/api/Appointments', async (info) => {
        await delay(1000);

        return HttpResponse.json(getPostApiAppointmentsResponseMock(), {
            status: 200,
            headers: { 'Content-Type': 'text/plain' },
        });
    });
};

export const getGetApiAppointmentsIdMockHandler = (
    overrideResponse?:
        | Appointment
        | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<Appointment> | Appointment)
) => {
    return http.get('*/api/Appointments/:id', async (info) => {
        await delay(1000);

        return HttpResponse.json(getGetApiAppointmentsIdResponseMock(), {
            status: 200,
            headers: { 'Content-Type': 'text/plain' },
        });
    });
};

export const getPutApiAppointmentsIdMockHandler = (
    overrideResponse?: void | ((info: Parameters<Parameters<typeof http.put>[1]>[0]) => Promise<void> | void)
) => {
    return http.put('*/api/Appointments/:id', async (info) => {
        await delay(1000);
        if (typeof overrideResponse === 'function') {
            await overrideResponse(info);
        }
        return HttpResponse.json(null, { status: 200 });
    });
};

export const getDeleteApiAppointmentsIdMockHandler = (
    overrideResponse?: void | ((info: Parameters<Parameters<typeof http.delete>[1]>[0]) => Promise<void> | void)
) => {
    return http.delete('*/api/Appointments/:id', async (info) => {
        await delay(1000);
        if (typeof overrideResponse === 'function') {
            await overrideResponse(info);
        }
        return HttpResponse.json(null, { status: 200 });
    });
};

export const getGetApiAppointmentsDoctorDoctorIdDateAppointmentDateMockHandler = (
    overrideResponse?:
        | Appointment[]
        | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<Appointment[]> | Appointment[])
) => {
    return http.get('*/api/Appointments/doctor/:doctorId/date/:appointmentDate', async (info) => {
        await delay(1000);

        return HttpResponse.json(getGetApiAppointmentsDoctorDoctorIdDateAppointmentDateResponseMock(), {
            status: 200,
            headers: { 'Content-Type': 'text/plain' },
        });
    });
};

export const getGetApiDepartmentsMockHandler = (
    overrideResponse?:
        | Department[]
        | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<Department[]> | Department[])
) => {
    return http.get('*/api/Departments', async (info) => {
        await delay(1000);
        return HttpResponse.json(getGetApiDepartmentsResponseMock(), {
            status: 200,
            headers: { 'Content-Type': 'text/plain' },
        });
    });
};

export const getPostApiDepartmentsMockHandler = (
    overrideResponse?:
        | Department
        | ((info: Parameters<Parameters<typeof http.post>[1]>[0]) => Promise<Department> | Department)
) => {
    return http.post('*/api/Departments', async (info) => {
        await delay(1000);

        return HttpResponse.json(getPostApiDepartmentsResponseMock(), {
            status: 200,
            headers: { 'Content-Type': 'text/plain' },
        });
    });
};

export const getGetApiDepartmentsIdMockHandler = (
    overrideResponse?:
        | Department
        | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<Department> | Department)
) => {
    return http.get('*/api/Departments/:id', async (info) => {
        await delay(1000);

        return HttpResponse.json(getGetApiDepartmentsIdResponseMock(), {
            status: 200,
            headers: { 'Content-Type': 'text/plain' },
        });
    });
};

export const getPutApiDepartmentsIdMockHandler = (
    overrideResponse?: void | ((info: Parameters<Parameters<typeof http.put>[1]>[0]) => Promise<void> | void)
) => {
    return http.put('*/api/Departments/:id', async (info) => {
        await delay(1000);
        if (typeof overrideResponse === 'function') {
            await overrideResponse(info);
        }
        return HttpResponse.json(null, { status: 200 });
    });
};

export const getDeleteApiDepartmentsIdMockHandler = (
    overrideResponse?: void | ((info: Parameters<Parameters<typeof http.delete>[1]>[0]) => Promise<void> | void)
) => {
    return http.delete('*/api/Departments/:id', async (info) => {
        await delay(1000);
        if (typeof overrideResponse === 'function') {
            await overrideResponse(info);
        }
        return HttpResponse.json(null, { status: 200 });
    });
};

export const getGetApiDiagnosesMockHandler = (
    overrideResponse?:
        | Diagnosis[]
        | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<Diagnosis[]> | Diagnosis[])
) => {
    return http.get('*/api/Diagnoses', async (info) => {
        await delay(1000);

        return HttpResponse.json(getGetApiDiagnosesResponseMock(), {
            status: 200,
            headers: { 'Content-Type': 'text/plain' },
        });
    });
};

export const getPostApiDiagnosesMockHandler = (
    overrideResponse?:
        | Diagnosis
        | ((info: Parameters<Parameters<typeof http.post>[1]>[0]) => Promise<Diagnosis> | Diagnosis)
) => {
    return http.post('*/api/Diagnoses', async (info) => {
        await delay(1000);

        return HttpResponse.json(getPostApiDiagnosesResponseMock(), {
            status: 200,
            headers: { 'Content-Type': 'text/plain' },
        });
    });
};

export const getGetApiDiagnosesIdMockHandler = (
    overrideResponse?:
        | Diagnosis
        | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<Diagnosis> | Diagnosis)
) => {
    return http.get('*/api/Diagnoses/:id', async (info) => {
        await delay(1000);

        return HttpResponse.json(getGetApiDiagnosesIdResponseMock(), {
            status: 200,
            headers: { 'Content-Type': 'text/plain' },
        });
    });
};

export const getPutApiDiagnosesIdMockHandler = (
    overrideResponse?: void | ((info: Parameters<Parameters<typeof http.put>[1]>[0]) => Promise<void> | void)
) => {
    return http.put('*/api/Diagnoses/:id', async (info) => {
        await delay(1000);
        if (typeof overrideResponse === 'function') {
            await overrideResponse(info);
        }
        return HttpResponse.json(null, { status: 200 });
    });
};

export const getDeleteApiDiagnosesIdMockHandler = (
    overrideResponse?: void | ((info: Parameters<Parameters<typeof http.delete>[1]>[0]) => Promise<void> | void)
) => {
    return http.delete('*/api/Diagnoses/:id', async (info) => {
        await delay(1000);
        if (typeof overrideResponse === 'function') {
            await overrideResponse(info);
        }
        return HttpResponse.json(null, { status: 200 });
    });
};

export const getGetApiDoctorsMockHandler = (
    overrideResponse?:
        | Doctor[]
        | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<Doctor[]> | Doctor[])
) => {
    return http.get('*/api/Doctors', async (info) => {
        await delay(1000);

        return HttpResponse.json(getGetApiDoctorsResponseMock(), {
            status: 200,
            headers: { 'Content-Type': 'text/plain' },
        });
    });
};

export const getPostApiDoctorsMockHandler = (
    overrideResponse?: Doctor | ((info: Parameters<Parameters<typeof http.post>[1]>[0]) => Promise<Doctor> | Doctor)
) => {
    return http.post('*/api/Doctors', async (info) => {
        await delay(1000);

        return HttpResponse.json(getPostApiDoctorsResponseMock(), {
            status: 200,
            headers: { 'Content-Type': 'text/plain' },
        });
    });
};

export const getGetApiDoctorsIdMockHandler = (
    overrideResponse?: Doctor | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<Doctor> | Doctor)
) => {
    return http.get('*/api/Doctors/:id', async (info) => {
        await delay(1000);

        return HttpResponse.json(getGetApiDoctorsIdResponseMock(), {
            status: 200,
            headers: { 'Content-Type': 'text/plain' },
        });
    });
};

export const getPutApiDoctorsIdMockHandler = (
    overrideResponse?: void | ((info: Parameters<Parameters<typeof http.put>[1]>[0]) => Promise<void> | void)
) => {
    return http.put('*/api/Doctors/:id', async (info) => {
        await delay(1000);
        if (typeof overrideResponse === 'function') {
            await overrideResponse(info);
        }
        return HttpResponse.json(null, { status: 200 });
    });
};

export const getDeleteApiDoctorsIdMockHandler = (
    overrideResponse?: void | ((info: Parameters<Parameters<typeof http.delete>[1]>[0]) => Promise<void> | void)
) => {
    return http.delete('*/api/Doctors/:id', async (info) => {
        await delay(1000);
        if (typeof overrideResponse === 'function') {
            await overrideResponse(info);
        }
        return HttpResponse.json(null, { status: 200 });
    });
};

export const getPostApiDoctorsDoctorregisterMockHandler = (
    overrideResponse?: void | ((info: Parameters<Parameters<typeof http.post>[1]>[0]) => Promise<void> | void)
) => {
    return http.post('*/api/Doctors/doctorregister', async (info) => {
        await delay(1000);
        if (typeof overrideResponse === 'function') {
            await overrideResponse(info);
        }
        return HttpResponse.json(null, { status: 200 });
    });
};

export const getGetApiDoctorSchedulesMockHandler = (
    overrideResponse?:
        | DoctorSchedule[]
        | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<DoctorSchedule[]> | DoctorSchedule[])
) => {
    return http.get('*/api/DoctorSchedules', async (info) => {
        await delay(1000);

        return HttpResponse.json(getGetApiDoctorSchedulesResponseMock(), {
            status: 200,
            headers: { 'Content-Type': 'text/plain' },
        });
    });
};

export const getPostApiDoctorSchedulesMockHandler = (
    overrideResponse?:
        | DoctorSchedule
        | ((info: Parameters<Parameters<typeof http.post>[1]>[0]) => Promise<DoctorSchedule> | DoctorSchedule)
) => {
    return http.post('*/api/DoctorSchedules', async (info) => {
        await delay(1000);

        return HttpResponse.json(getPostApiDoctorSchedulesResponseMock(), {
            status: 200,
            headers: { 'Content-Type': 'text/plain' },
        });
    });
};

export const getGetApiDoctorSchedulesIdMockHandler = (
    overrideResponse?:
        | DoctorSchedule
        | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<DoctorSchedule> | DoctorSchedule)
) => {
    return http.get('*/api/DoctorSchedules/:id', async (info) => {
        await delay(1000);

        return HttpResponse.json(getGetApiDoctorSchedulesIdResponseMock(), {
            status: 200,
            headers: { 'Content-Type': 'text/plain' },
        });
    });
};

export const getPutApiDoctorSchedulesIdMockHandler = (
    overrideResponse?: void | ((info: Parameters<Parameters<typeof http.put>[1]>[0]) => Promise<void> | void)
) => {
    return http.put('*/api/DoctorSchedules/:id', async (info) => {
        await delay(1000);
        if (typeof overrideResponse === 'function') {
            await overrideResponse(info);
        }
        return HttpResponse.json(null, { status: 200 });
    });
};

export const getDeleteApiDoctorSchedulesIdMockHandler = (
    overrideResponse?: void | ((info: Parameters<Parameters<typeof http.delete>[1]>[0]) => Promise<void> | void)
) => {
    return http.delete('*/api/DoctorSchedules/:id', async (info) => {
        await delay(1000);
        if (typeof overrideResponse === 'function') {
            await overrideResponse(info);
        }
        return HttpResponse.json(null, { status: 200 });
    });
};

export const getGetApiDoctorSchedulesDoctorScheduleDoctorIdMockHandler = (
    overrideResponse?:
        | DoctorSchedule[]
        | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<DoctorSchedule[]> | DoctorSchedule[])
) => {
    return http.get('*/api/DoctorSchedules/doctor-schedule/:doctorId', async (info) => {
        await delay(1000);

        return HttpResponse.json(getGetApiDoctorSchedulesDoctorScheduleDoctorIdResponseMock(), {
            status: 200,
            headers: { 'Content-Type': 'text/plain' },
        });
    });
};

export const getGetApiEmergencyContactsMockHandler = (
    overrideResponse?:
        | EmergencyContact[]
        | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<EmergencyContact[]> | EmergencyContact[])
) => {
    return http.get('*/api/EmergencyContacts', async (info) => {
        await delay(1000);

        return HttpResponse.json(getGetApiEmergencyContactsResponseMock(), {
            status: 200,
            headers: { 'Content-Type': 'text/plain' },
        });
    });
};

export const getPostApiEmergencyContactsMockHandler = (
    overrideResponse?:
        | EmergencyContact
        | ((info: Parameters<Parameters<typeof http.post>[1]>[0]) => Promise<EmergencyContact> | EmergencyContact)
) => {
    return http.post('*/api/EmergencyContacts', async (info) => {
        await delay(1000);

        return HttpResponse.json(getPostApiEmergencyContactsResponseMock(), {
            status: 200,
            headers: { 'Content-Type': 'text/plain' },
        });
    });
};

export const getGetApiEmergencyContactsIdMockHandler = (
    overrideResponse?:
        | EmergencyContact
        | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<EmergencyContact> | EmergencyContact)
) => {
    return http.get('*/api/EmergencyContacts/:id', async (info) => {
        await delay(1000);

        return HttpResponse.json(getGetApiEmergencyContactsIdResponseMock(), {
            status: 200,
            headers: { 'Content-Type': 'text/plain' },
        });
    });
};

export const getPutApiEmergencyContactsIdMockHandler = (
    overrideResponse?: void | ((info: Parameters<Parameters<typeof http.put>[1]>[0]) => Promise<void> | void)
) => {
    return http.put('*/api/EmergencyContacts/:id', async (info) => {
        await delay(1000);
        if (typeof overrideResponse === 'function') {
            await overrideResponse(info);
        }
        return HttpResponse.json(null, { status: 200 });
    });
};

export const getDeleteApiEmergencyContactsIdMockHandler = (
    overrideResponse?: void | ((info: Parameters<Parameters<typeof http.delete>[1]>[0]) => Promise<void> | void)
) => {
    return http.delete('*/api/EmergencyContacts/:id', async (info) => {
        await delay(1000);
        if (typeof overrideResponse === 'function') {
            await overrideResponse(info);
        }
        return HttpResponse.json(null, { status: 200 });
    });
};

export const getGetApiInvoicesMockHandler = (
    overrideResponse?:
        | Invoice[]
        | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<Invoice[]> | Invoice[])
) => {
    return http.get('*/api/Invoices', async (info) => {
        await delay(1000);

        return HttpResponse.json(getGetApiInvoicesResponseMock(), {
            status: 200,
            headers: { 'Content-Type': 'text/plain' },
        });
    });
};

export const getPostApiInvoicesMockHandler = (
    overrideResponse?: Invoice | ((info: Parameters<Parameters<typeof http.post>[1]>[0]) => Promise<Invoice> | Invoice)
) => {
    return http.post('*/api/Invoices', async (info) => {
        await delay(1000);

        return HttpResponse.json(getPostApiInvoicesResponseMock(), {
            status: 200,
            headers: { 'Content-Type': 'text/plain' },
        });
    });
};

export const getGetApiInvoicesIdMockHandler = (
    overrideResponse?: Invoice | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<Invoice> | Invoice)
) => {
    return http.get('*/api/Invoices/:id', async (info) => {
        await delay(1000);

        return HttpResponse.json(getGetApiInvoicesIdResponseMock(), {
            status: 200,
            headers: { 'Content-Type': 'text/plain' },
        });
    });
};

export const getPutApiInvoicesIdMockHandler = (
    overrideResponse?: void | ((info: Parameters<Parameters<typeof http.put>[1]>[0]) => Promise<void> | void)
) => {
    return http.put('*/api/Invoices/:id', async (info) => {
        await delay(1000);
        if (typeof overrideResponse === 'function') {
            await overrideResponse(info);
        }
        return HttpResponse.json(null, { status: 200 });
    });
};

export const getDeleteApiInvoicesIdMockHandler = (
    overrideResponse?: void | ((info: Parameters<Parameters<typeof http.delete>[1]>[0]) => Promise<void> | void)
) => {
    return http.delete('*/api/Invoices/:id', async (info) => {
        await delay(1000);
        if (typeof overrideResponse === 'function') {
            await overrideResponse(info);
        }
        return HttpResponse.json(null, { status: 200 });
    });
};

export const getGetApiPatientsMockHandler = (
    overrideResponse?:
        | Patient[]
        | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<Patient[]> | Patient[])
) => {
    return http.get('*/api/Patients', async (info) => {
        await delay(1000);

        return HttpResponse.json(getGetApiPatientsResponseMock(), {
            status: 200,
            headers: { 'Content-Type': 'text/plain' },
        });
    });
};

export const getPostApiPatientsMockHandler = (
    overrideResponse?: Patient | ((info: Parameters<Parameters<typeof http.post>[1]>[0]) => Promise<Patient> | Patient)
) => {
    return http.post('*/api/Patients', async (info) => {
        await delay(1000);

        return HttpResponse.json(getPostApiPatientsResponseMock(), {
            status: 200,
            headers: { 'Content-Type': 'text/plain' },
        });
    });
};

export const getGetApiPatientsIdMockHandler = (
    overrideResponse?: Patient | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<Patient> | Patient)
) => {
    return http.get('*/api/Patients/:id', async (info) => {
        await delay(1000);

        return HttpResponse.json(getGetApiPatientsIdResponseMock(), {
            status: 200,
            headers: { 'Content-Type': 'text/plain' },
        });
    });
};

export const getPutApiPatientsIdMockHandler = (
    overrideResponse?: void | ((info: Parameters<Parameters<typeof http.put>[1]>[0]) => Promise<void> | void)
) => {
    return http.put('*/api/Patients/:id', async (info) => {
        await delay(1000);
        if (typeof overrideResponse === 'function') {
            await overrideResponse(info);
        }
        return HttpResponse.json(null, { status: 200 });
    });
};

export const getDeleteApiPatientsIdMockHandler = (
    overrideResponse?: void | ((info: Parameters<Parameters<typeof http.delete>[1]>[0]) => Promise<void> | void)
) => {
    return http.delete('*/api/Patients/:id', async (info) => {
        await delay(1000);
        if (typeof overrideResponse === 'function') {
            await overrideResponse(info);
        }
        return HttpResponse.json(null, { status: 200 });
    });
};

export const getPostApiPatientsPatientregisterMockHandler = (
    overrideResponse?: void | ((info: Parameters<Parameters<typeof http.post>[1]>[0]) => Promise<void> | void)
) => {
    return http.post('*/api/Patients/patientregister', async (info) => {
        await delay(1000);
        if (typeof overrideResponse === 'function') {
            await overrideResponse(info);
        }
        return HttpResponse.json(null, { status: 200 });
    });
};

export const getGetWeatherForecastMockHandler = (
    overrideResponse?:
        | WeatherForecast[]
        | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<WeatherForecast[]> | WeatherForecast[])
) => {
    return http.get('*/WeatherForecast', async (info) => {
        await delay(1000);

        return HttpResponse.json(getGetWeatherForecastResponseMock(), {
            status: 200,
            headers: { 'Content-Type': 'text/plain' },
        });
    });
};
export const getBookAPIMock = () => [
    getPostApiAccountLoginMockHandler(),
    getPostApiAccountLogoutMockHandler(),
    getGetApiAppointmentsMockHandler(),
    getPostApiAppointmentsMockHandler(),
    getGetApiAppointmentsIdMockHandler(),
    getPutApiAppointmentsIdMockHandler(),
    getDeleteApiAppointmentsIdMockHandler(),
    getGetApiAppointmentsDoctorDoctorIdDateAppointmentDateMockHandler(),
    getGetApiDepartmentsMockHandler(),
    getPostApiDepartmentsMockHandler(),
    getGetApiDepartmentsIdMockHandler(),
    getPutApiDepartmentsIdMockHandler(),
    getDeleteApiDepartmentsIdMockHandler(),
    getGetApiDiagnosesMockHandler(),
    getPostApiDiagnosesMockHandler(),
    getGetApiDiagnosesIdMockHandler(),
    getPutApiDiagnosesIdMockHandler(),
    getDeleteApiDiagnosesIdMockHandler(),
    getGetApiDoctorsMockHandler(),
    getPostApiDoctorsMockHandler(),
    getGetApiDoctorsIdMockHandler(),
    getPutApiDoctorsIdMockHandler(),
    getDeleteApiDoctorsIdMockHandler(),
    getPostApiDoctorsDoctorregisterMockHandler(),
    getGetApiDoctorSchedulesMockHandler(),
    getPostApiDoctorSchedulesMockHandler(),
    getGetApiDoctorSchedulesIdMockHandler(),
    getPutApiDoctorSchedulesIdMockHandler(),
    getDeleteApiDoctorSchedulesIdMockHandler(),
    getGetApiDoctorSchedulesDoctorScheduleDoctorIdMockHandler(),
    getGetApiEmergencyContactsMockHandler(),
    getPostApiEmergencyContactsMockHandler(),
    getGetApiEmergencyContactsIdMockHandler(),
    getPutApiEmergencyContactsIdMockHandler(),
    getDeleteApiEmergencyContactsIdMockHandler(),
    getGetApiInvoicesMockHandler(),
    getPostApiInvoicesMockHandler(),
    getGetApiInvoicesIdMockHandler(),
    getPutApiInvoicesIdMockHandler(),
    getDeleteApiInvoicesIdMockHandler(),
    getGetApiPatientsMockHandler(),
    getPostApiPatientsMockHandler(),
    getGetApiPatientsIdMockHandler(),
    getPutApiPatientsIdMockHandler(),
    getDeleteApiPatientsIdMockHandler(),
    getPostApiPatientsPatientregisterMockHandler(),
    getGetWeatherForecastMockHandler(),
];
